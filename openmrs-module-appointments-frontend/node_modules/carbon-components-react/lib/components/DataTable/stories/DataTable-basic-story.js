"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Zebra = exports.Xs = exports.Xl = exports.Sm = exports.DefaultLg = void 0;

var _react = _interopRequireDefault(require("react"));

var _ = _interopRequireWildcard(require(".."));

var _DataTable = _interopRequireDefault(require("../DataTable.mdx"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Copyright IBM Corp. 2016, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var _default = {
  title: 'Components/DataTable/Basic',
  component: _.default,
  subcomponents: {
    TableContainer: _.TableContainer,
    Table: _.Table,
    TableHead: _.TableHead,
    TableRow: _.TableRow,
    TableHeader: _.TableHeader,
    TableBody: _.TableBody,
    TableCell: _.TableCell
  },
  parameters: {
    docs: {
      page: _DataTable.default
    }
  }
};
exports.default = _default;

var DefaultLg = function DefaultLg() {
  var rows = [{
    id: 'load-balancer-1',
    name: 'Load Balancer 1',
    rule: 'Round robin',
    Status: 'Starting',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-2',
    name: 'Load Balancer 2',
    rule: 'DNS delegation',
    status: 'Active',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-3',
    name: 'Load Balancer 3',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-4',
    name: 'Load Balancer 4',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-5',
    name: 'Load Balancer 5',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-6',
    name: 'Load Balancer 6',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-7',
    name: 'Load Balancer 7',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }];
  var headers = ['Name', 'Rule', 'Status', 'Other', 'Example'];
  return /*#__PURE__*/_react.default.createElement(_.Table, null, /*#__PURE__*/_react.default.createElement(_.TableHead, null, /*#__PURE__*/_react.default.createElement(_.TableRow, null, headers.map(function (header) {
    return /*#__PURE__*/_react.default.createElement(_.TableHeader, {
      id: header.key,
      key: header
    }, header);
  }))), /*#__PURE__*/_react.default.createElement(_.TableBody, null, rows.map(function (row) {
    return /*#__PURE__*/_react.default.createElement(_.TableRow, {
      key: row.id
    }, Object.keys(row).filter(function (key) {
      return key !== 'id';
    }).map(function (key) {
      return /*#__PURE__*/_react.default.createElement(_.TableCell, {
        key: key
      }, row[key]);
    }));
  })));
};

exports.DefaultLg = DefaultLg;

var Xl = function Xl() {
  var rows = [{
    id: 'load-balancer-1',
    name: 'Load Balancer 1',
    rule: 'Round robin',
    Status: 'Starting',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-2',
    name: 'Load Balancer 2',
    rule: 'DNS delegation',
    status: 'Active',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-3',
    name: 'Load Balancer 3',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-4',
    name: 'Load Balancer 4',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-5',
    name: 'Load Balancer 5',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-6',
    name: 'Load Balancer 6',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-7',
    name: 'Load Balancer 7',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }];
  var headers = ['Name', 'Rule', 'Status', 'Other', 'Example'];
  return /*#__PURE__*/_react.default.createElement(_.Table, {
    size: "tall"
  }, /*#__PURE__*/_react.default.createElement(_.TableHead, null, /*#__PURE__*/_react.default.createElement(_.TableRow, null, headers.map(function (header) {
    return /*#__PURE__*/_react.default.createElement(_.TableHeader, {
      id: header.key,
      key: header
    }, header);
  }))), /*#__PURE__*/_react.default.createElement(_.TableBody, null, rows.map(function (row) {
    return /*#__PURE__*/_react.default.createElement(_.TableRow, {
      key: row.id
    }, Object.keys(row).filter(function (key) {
      return key !== 'id';
    }).map(function (key) {
      return /*#__PURE__*/_react.default.createElement(_.TableCell, {
        key: key
      }, row[key]);
    }));
  })));
};

exports.Xl = Xl;

var Sm = function Sm() {
  var rows = [{
    id: 'load-balancer-1',
    name: 'Load Balancer 1',
    rule: 'Round robin',
    Status: 'Starting',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-2',
    name: 'Load Balancer 2',
    rule: 'DNS delegation',
    status: 'Active',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-3',
    name: 'Load Balancer 3',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-4',
    name: 'Load Balancer 4',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-5',
    name: 'Load Balancer 5',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-6',
    name: 'Load Balancer 6',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-7',
    name: 'Load Balancer 7',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }];
  var headers = ['Name', 'Rule', 'Status', 'Other', 'Example'];
  return /*#__PURE__*/_react.default.createElement(_.Table, {
    size: "sm"
  }, /*#__PURE__*/_react.default.createElement(_.TableHead, null, /*#__PURE__*/_react.default.createElement(_.TableRow, null, headers.map(function (header) {
    return /*#__PURE__*/_react.default.createElement(_.TableHeader, {
      id: header.key,
      key: header
    }, header);
  }))), /*#__PURE__*/_react.default.createElement(_.TableBody, null, rows.map(function (row) {
    return /*#__PURE__*/_react.default.createElement(_.TableRow, {
      key: row.id
    }, Object.keys(row).filter(function (key) {
      return key !== 'id';
    }).map(function (key) {
      return /*#__PURE__*/_react.default.createElement(_.TableCell, {
        key: key
      }, row[key]);
    }));
  })));
};

exports.Sm = Sm;

var Xs = function Xs() {
  var rows = [{
    id: 'load-balancer-1',
    name: 'Load Balancer 1',
    rule: 'Round robin',
    Status: 'Starting',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-2',
    name: 'Load Balancer 2',
    rule: 'DNS delegation',
    status: 'Active',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-3',
    name: 'Load Balancer 3',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-4',
    name: 'Load Balancer 4',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-5',
    name: 'Load Balancer 5',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-6',
    name: 'Load Balancer 6',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-7',
    name: 'Load Balancer 7',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }];
  var headers = ['Name', 'Rule', 'Status', 'Other', 'Example'];
  return /*#__PURE__*/_react.default.createElement(_.Table, {
    size: "compact"
  }, /*#__PURE__*/_react.default.createElement(_.TableHead, null, /*#__PURE__*/_react.default.createElement(_.TableRow, null, headers.map(function (header) {
    return /*#__PURE__*/_react.default.createElement(_.TableHeader, {
      id: header.key,
      key: header
    }, header);
  }))), /*#__PURE__*/_react.default.createElement(_.TableBody, null, rows.map(function (row) {
    return /*#__PURE__*/_react.default.createElement(_.TableRow, {
      key: row.id
    }, Object.keys(row).filter(function (key) {
      return key !== 'id';
    }).map(function (key) {
      return /*#__PURE__*/_react.default.createElement(_.TableCell, {
        key: key
      }, row[key]);
    }));
  })));
};

exports.Xs = Xs;

var Zebra = function Zebra() {
  var rows = [{
    id: 'load-balancer-1',
    name: 'Load Balancer 1',
    rule: 'Round robin',
    status: 'Starting',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-2',
    name: 'Load Balancer 2',
    rule: 'DNS delegation',
    status: 'Active',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-3',
    name: 'Load Balancer 3',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-4',
    name: 'Load Balancer 4',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-5',
    name: 'Load Balancer 5',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-6',
    name: 'Load Balancer 6',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-7',
    name: 'Load Balancer 7',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }];
  var headers = ['Name', 'Rule', 'Status', 'Other', 'Example'];
  return /*#__PURE__*/_react.default.createElement(_.Table, {
    useZebraStyles: true
  }, /*#__PURE__*/_react.default.createElement(_.TableHead, null, /*#__PURE__*/_react.default.createElement(_.TableRow, null, headers.map(function (header) {
    return /*#__PURE__*/_react.default.createElement(_.TableHeader, {
      id: header.key,
      key: header
    }, header);
  }))), /*#__PURE__*/_react.default.createElement(_.TableBody, null, rows.map(function (row) {
    return /*#__PURE__*/_react.default.createElement(_.TableRow, {
      key: row.id
    }, Object.keys(row).filter(function (key) {
      return key !== 'id';
    }).map(function (key) {
      return /*#__PURE__*/_react.default.createElement(_.TableCell, {
        key: key
      }, row[key]);
    }));
  })));
};

exports.Zebra = Zebra;