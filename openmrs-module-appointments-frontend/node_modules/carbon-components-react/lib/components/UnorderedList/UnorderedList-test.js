"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _UnorderedList = _interopRequireDefault(require("../UnorderedList"));

var _ListItem = _interopRequireDefault(require("../ListItem"));

var _carbonComponents = require("carbon-components");

var _react2 = require("@testing-library/react");

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var prefix = _carbonComponents.settings.prefix;
describe('UnorderedList', function () {
  it('should render children as expected', function () {
    (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_UnorderedList.default, null, /*#__PURE__*/_react.default.createElement(_ListItem.default, null, "Item")));
    expect(_react2.screen.getByText('Item')).toBeInTheDocument();
  });
  it('should render nested lists', function () {
    (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_UnorderedList.default, null, /*#__PURE__*/_react.default.createElement(_ListItem.default, null, "Item"), /*#__PURE__*/_react.default.createElement(_UnorderedList.default, {
      nested: true,
      "data-testid": "nested-list"
    }, /*#__PURE__*/_react.default.createElement(_ListItem.default, null, "Nested"))));
    expect(_react2.screen.getByTestId('nested-list')).toHaveClass("".concat(prefix, "--list--nested"));
  });
  it('should add custom className given via className prop', function () {
    (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_UnorderedList.default, {
      className: "some-class",
      "data-testid": "list"
    }, /*#__PURE__*/_react.default.createElement(_ListItem.default, null, "Item")));
    expect(_react2.screen.getByTestId('list')).toHaveClass('some-class');
  });
});