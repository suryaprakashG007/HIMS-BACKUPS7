import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import React from 'react';
import PropTypes from 'prop-types';

var WithState = /*#__PURE__*/function (_React$PureComponent) {
  _inherits(WithState, _React$PureComponent);

  var _super = _createSuper(WithState);

  function WithState(props) {
    var _this;

    _classCallCheck(this, WithState);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "boundSetState", function () {
      var _this2;

      return (_this2 = _this).setState.apply(_this2, arguments);
    });

    _this.state = _this.props.initialState;
    return _this;
  }

  _createClass(WithState, [{
    key: "render",
    value: function render() {
      return this.props.children({
        state: this.state,
        setState: this.boundSetState
      });
    }
  }]);

  return WithState;
}(React.PureComponent);

_defineProperty(WithState, "propTypes", {
  children: PropTypes.func.isRequired,
  initialState: PropTypes.object
});

export { WithState as default };