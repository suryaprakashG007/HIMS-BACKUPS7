(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 45);
/******/ })
/************************************************************************/
/******/ ({

/***/ 45:
/***/ (function(module, exports, __webpack_require__) {

angular.module('bahmni.common.uiHelper', ['ngClipboard']).run(["$templateCache", function ($templateCache) {
    $templateCache.put('ui-helper-error', __webpack_require__(46));
    $templateCache.put('ui-helper-header', __webpack_require__(47));
    $templateCache.put('ui-helper-messages', __webpack_require__(48));
    $templateCache.put('ui-helper-save-confirmation', __webpack_require__(49));
    $templateCache.put('ui-helper-confirm-box', __webpack_require__(50));
}]);

__webpack_require__(51);
__webpack_require__(52);
__webpack_require__(53);

__webpack_require__(54);
__webpack_require__(55);
__webpack_require__(56);
__webpack_require__(57);
__webpack_require__(58);

__webpack_require__(59);
__webpack_require__(60);
__webpack_require__(61);
__webpack_require__(62);

__webpack_require__(63);
__webpack_require__(64);

__webpack_require__(65);

/***/ }),

/***/ 46:
/***/ (function(module, exports) {

module.exports = "<p class=\"caution\" ng-show=\"error\"><i class=\"fa fa-exclamation-sign small\"></i>{{error}}</p>\n<p ng-hide=\"error\">Page not found.</p>";

/***/ }),

/***/ 47:
/***/ (function(module, exports) {

module.exports = "<div class=\"opd-header-wrapper\">\n    <div class=\"opd-header-top\">\n        <header>\n            <bm-back-links></bm-back-links>\n            <div class=\"fr\">\n                <div class=\"retro-date-widget-wrapper\"\n                     show-if-privilege=\"{{retrospectivePrivilege}},{{onBehalfOfPrivilege}},{{locationPickerPrivilege}}\"\n                     ng-if=\"getTitle()\">\n                    <div class=\"retro-date-widget-header fr\">\n                        <button ng-click=\"popUpHandler()\">{{ getTitle() | translate }}</button>\n                    </div>\n                </div>\n            </div>\n            <div ui-view=\"additional-header\"></div>\n        </header>\n    </div>\n</div>\n";

/***/ }),

/***/ 48:
/***/ (function(module, exports) {

module.exports = "\n<div ng-controller=\"MessageController\" class=\"messages\">\n\n    <ul>\n        <li>\n            <div class=\"message-container success-message-container\" ng-if=\"isInfoMessagePresent()\">\n                <div class=\"message-icon\">\n                    <i class=\"fa fa-check-circle\"></i>\n                </div>\n                <div class=\"message-text\">\n                    <div ng-repeat=\"info in messages.info\">\n                        {{info.value | translate}}\n                    </div>\n                </div>\n            </div>\n        </li>\n    </ul>\n\n    <ul>\n        <li>\n            <div class=\"message-container error-message-container\" ng-if=\"isErrorMessagePresent()\">\n                <div class=\"message-text\">\n                    <div class=\"types-for-errors error-message\">\n                        <div ng-repeat=\"error in messages.error track by $index\">\n                            <div class=\"msg\" ng-if=\"!error.isServerError\">{{ error.value | translate}}</div>\n                            <div class=\"msg primary\" ng-if=\"error.isServerError\">{{error.value | translate}}</div>\n                        </div>\n                    </div>\n                    <div class=\"button-wrappper clearfix\">\n                        <button type=\"button\" clip-copy=\"getMessageText('error')\" class=\"copy-btn fl\">{{ 'MESSAGE_DIALOG_OPTION_COPY' | translate }}</button>\n                        <button type=\"button\" ng-click=\"hideMessage('error')\" class=\"show-btn fr\">{{ 'MESSAGE_DIALOG_OPTION_OKAY' | translate }}</button>\n                    </div>\n                </div>\n            </div>\n        </li>\n    </ul>\n</div>\n\n";

/***/ }),

/***/ 49:
/***/ (function(module, exports) {

module.exports = "<div class=\"revise-refill-modal-wrapper\" aria-labelledby=\"dialog-label\">\n    <!--Added to override the z-index property of the top navigation bar. It is done to prevent any user action\n    when the popup is shown-->\n    <style type=\"text/css\">\n        .opd-header-wrapper {\n            z-index: 10000 !important;\n        }\n    </style>\n    <div class=\"drug-details\">\n        <p>{{'SAVE_CONFIRMATION_DIALOG_MESSAGE_KEY' | translate}}</p>\n    </div>\n\n    <div class=\"dialog-button-group\">\n        <button id=\"modal-revise-button1\" class=\"secondary-button\" ng-click=\"continueWithoutSaving()\">{{'SAVE_CONFIRMATION_OPTION_DONT_SAVE_KEY' | translate}}</button>\n        <button id=\"modal-revise-button2\" class=\"secondary-button\" ng-click=\"cancelTransition()\">{{'SAVE_CONFIRMATION_OPTION_CANCEL_KEY' | translate}}</button>\n        <button id=\"modal-revise-button3\" class=\"secondary-button\" ng-click=\"saveAndContinue()\" ng-show=\"showSaveAndContinueButton\">{{'SAVE_CONFIRMATION_OPTION_SAVE_KEY' | translate}}</button>\n    </div>\n\n    <span class=\"ngdialog-end\"></span>\n</div>\n\n\n";

/***/ }),

/***/ 50:
/***/ (function(module, exports) {

module.exports = "<div class=\"confirm-box\">\n    <span class=\"ngdialog-close\"></span>\n    <p class=\"message\">{{::scope.message | translate}}</p>\n    <div class=\"actions\">\n        <button ng-repeat=\"action in actions\" ng-click=\"scope[action.name](close);\" id=\"{{action.name}}\">\n            {{::action.display | translate}}\n        </button>\n    </div>\n</div>\n";

/***/ }),

/***/ 51:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


angular.module('bahmni.common.uiHelper').factory('printer', ['$rootScope', '$compile', '$http', '$timeout', '$q', 'spinner', function ($rootScope, $compile, $http, $timeout, $q, spinner) {
    var printHtml = function (html) {
        var deferred = $q.defer();
        var hiddenFrame = $('<iframe style="visibility: hidden"></iframe>').appendTo('body')[0];
        hiddenFrame.contentWindow.printAndRemove = function () {
            hiddenFrame.contentWindow.print();
            $(hiddenFrame).remove();
            deferred.resolve();
        };
        var htmlContent = "<!doctype html>" + "<html>" + '<body onload="printAndRemove();">' + html + '</body>' + "</html>";
        var doc = hiddenFrame.contentWindow.document.open("text/html", "replace");
        doc.write(htmlContent);
        doc.close();
        return deferred.promise;
    };

    var openNewWindow = function (html) {
        var newWindow = window.open("printTest.html");
        newWindow.addEventListener('load', function () {
            $(newWindow.document.body).html(html);
        }, false);
    };

    var print = function (templateUrl, data) {
        $rootScope.isBeingPrinted = true;
        $http.get(templateUrl).then(function (templateData) {
            var template = templateData.data;
            var printScope = $rootScope.$new();
            angular.extend(printScope, data);
            var element = $compile($('<div>' + template + '</div>'))(printScope);
            var renderAndPrintPromise = $q.defer();
            var waitForRenderAndPrint = function () {
                if (printScope.$$phase || $http.pendingRequests.length) {
                    $timeout(waitForRenderAndPrint, 1000);
                } else {
                    // Replace printHtml with openNewWindow for debugging
                    printHtml(element.html()).then(function () {
                        $rootScope.isBeingPrinted = false;
                        renderAndPrintPromise.resolve();
                    });
                    printScope.$destroy();
                }
                return renderAndPrintPromise.promise;
            };
            spinner.forPromise(waitForRenderAndPrint());
        });
    };

    var printFromScope = function (templateUrl, scope, afterPrint) {
        $rootScope.isBeingPrinted = true;
        $http.get(templateUrl).then(function (response) {
            var template = response.data;
            var printScope = scope;
            var element = $compile($('<div>' + template + '</div>'))(printScope);
            var renderAndPrintPromise = $q.defer();
            var waitForRenderAndPrint = function () {
                if (printScope.$$phase || $http.pendingRequests.length) {
                    $timeout(waitForRenderAndPrint);
                } else {
                    printHtml(element.html()).then(function () {
                        $rootScope.isBeingPrinted = false;
                        if (afterPrint) {
                            afterPrint();
                        }
                        renderAndPrintPromise.resolve();
                    });
                }
                return renderAndPrintPromise.promise;
            };
            spinner.forPromise(waitForRenderAndPrint());
        });
    };
    return {
        print: print,
        printFromScope: printFromScope
    };
}]);

/***/ }),

/***/ 52:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


angular.module('bahmni.common.uiHelper').factory('spinner', ['messagingService', '$timeout', function (messagingService, $timeout) {
    var tokens = [];

    var topLevelDiv = function (element) {
        return $(element).find("div").eq(0);
    };

    var showSpinnerForElement = function (element) {
        if ($(element).find(".dashboard-section-loader").length === 0) {
            topLevelDiv(element).addClass('spinnable').append('<div class="dashboard-section-loader"></div>');
        }
        return {
            element: $(element).find(".dashboard-section-loader")
        };
    };

    var showSpinnerForOverlay = function () {
        var token = Math.random();
        tokens.push(token);

        if ($('#overlay').length === 0) {
            $('body').prepend('<div id="overlay"><div></div></div>');
        }

        var spinnerElement = $('#overlay');
        spinnerElement.stop().show();

        return {
            element: spinnerElement,
            token: token
        };
    };

    var show = function (element) {
        if (element !== undefined) {
            return showSpinnerForElement(element);
        }

        return showSpinnerForOverlay();
    };

    var hide = function (spinner, parentElement) {
        var spinnerElement = spinner.element;
        if (spinner.token) {
            _.pull(tokens, spinner.token);
            if (tokens.length === 0) {
                spinnerElement.fadeOut(300);
            }
        } else {
            topLevelDiv(parentElement).removeClass('spinnable');
            spinnerElement && spinnerElement.remove();
        }
    };

    var forPromise = function (promise, element) {
        return $timeout(function () {
            // Added timeout to push a new event into event queue. So that its callback will be invoked once DOM is completely rendered
            var spinner = show(element); // Don't inline this element
            promise['finally'](function () {
                hide(spinner, element);
            });
            return promise;
        });
    };

    var forAjaxPromise = function (promise, element) {
        var spinner = show(element);
        promise.always(function () {
            hide(spinner, element);
        });
        return promise;
    };

    return {
        forPromise: forPromise,
        forAjaxPromise: forAjaxPromise,
        show: show,
        hide: hide
    };
}]);

/***/ }),

/***/ 53:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


angular.module('bahmni.common.uiHelper').directive('nonBlank', function () {
    return function ($scope, element, attrs) {
        var addNonBlankAttrs = function () {
            element.attr({ 'required': 'required' });
        };

        var removeNonBlankAttrs = function () {
            element.removeAttr('required');
        };

        if (!attrs.nonBlank) {
            return addNonBlankAttrs(element);
        }

        $scope.$watch(attrs.nonBlank, function (value) {
            return value ? addNonBlankAttrs() : removeNonBlankAttrs();
        });
    };
}).directive('datepicker', function () {
    var link = function ($scope, element, attrs, ngModel) {
        var maxDate = attrs.maxDate;
        var minDate = attrs.minDate || "-120y";
        var format = attrs.dateFormat || 'dd-mm-yy';
        element.datepicker({
            changeYear: true,
            changeMonth: true,
            maxDate: maxDate,
            minDate: minDate,
            yearRange: 'c-120:c+120',
            dateFormat: format,
            onSelect: function (dateText) {
                $scope.$apply(function () {
                    ngModel.$setViewValue(dateText);
                });
            }
        });
    };

    return {
        require: 'ngModel',
        link: link
    };
}).directive('myAutocomplete', ['$parse', function ($parse) {
    var link = function (scope, element, attrs, ngModelCtrl) {
        var ngModel = $parse(attrs.ngModel);
        var source = scope.source();
        var responseMap = scope.responseMap();
        var onSelect = scope.onSelect();

        element.autocomplete({
            autofocus: true,
            minLength: 2,
            source: function (request, response) {
                source(attrs.id, request.term, attrs.itemType).then(function (data) {
                    var results = responseMap ? responseMap(data.data) : data.data;
                    response(results);
                });
            },
            select: function (event, ui) {
                scope.$apply(function (scope) {
                    ngModelCtrl.$setViewValue(ui.item.value);
                    scope.$eval(attrs.ngChange);
                    if (onSelect != null) {
                        onSelect(ui.item);
                    }
                });
                return true;
            },
            search: function (event) {
                var searchTerm = $.trim(element.val());
                if (searchTerm.length < 2) {
                    event.preventDefault();
                }
            }
        });
    };
    return {
        link: link,
        require: 'ngModel',
        scope: {
            source: '&',
            responseMap: '&',
            onSelect: '&'
        }
    };
}]).directive('bmForm', ['$timeout', function ($timeout) {
    var link = function (scope, elem, attrs) {
        $timeout(function () {
            $(elem).unbind('submit').submit(function (e) {
                var formScope = scope.$parent;
                var formName = attrs.name;
                e.preventDefault();
                if (scope.autofillable) {
                    $(elem).find('input').trigger('change');
                }
                if (formScope[formName].$valid) {
                    formScope.$apply(attrs.ngSubmit);
                    $(elem).removeClass('submitted-with-error');
                } else {
                    $(elem).addClass('submitted-with-error');
                }
            });
        }, 0);
    };
    return {
        link: link,
        require: 'form',
        scope: {
            autofillable: "="
        }
    };
}]).directive('patternValidate', ['$timeout', function ($timeout) {
    return function ($scope, element, attrs) {
        var addPatternToElement = function () {
            if ($scope.fieldValidation && $scope.fieldValidation[attrs.id]) {
                element.attr({ "pattern": $scope.fieldValidation[attrs.id].pattern, "title": $scope.fieldValidation[attrs.id].errorMessage, "type": "text" });
            }
        };

        $timeout(addPatternToElement);
    };
}]).directive('validateOn', function () {
    var link = function (scope, element, attrs, ngModelCtrl) {
        var validationMessage = attrs.validationMessage || 'Please enter a valid detail';

        var setValidity = function (value) {
            var valid = value ? true : false;
            ngModelCtrl.$setValidity('blank', valid);
            element[0].setCustomValidity(!valid ? validationMessage : '');
        };
        scope.$watch(attrs.validateOn, setValidity, true);
    };

    return {
        link: link,
        require: 'ngModel'
    };
});

/***/ }),

/***/ 54:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


angular.module('bahmni.common.uiHelper').service('backlinkService', ['$window', function ($window) {
    var self = this;

    var urls = [];
    self.reset = function () {
        urls = [];
    };

    self.setUrls = function (backLinks) {
        self.reset();
        angular.forEach(backLinks, function (backLink) {
            self.addUrl(backLink);
        });
    };

    self.addUrl = function (backLink) {
        urls.push(backLink);
    };

    self.addBackUrl = function (label) {
        var backLabel = label || "Back";
        urls.push({ label: backLabel, action: $window.history.back });
    };

    self.getUrlByLabel = function (label) {
        return urls.filter(function (url) {
            return url.label === label;
        });
    };

    self.getAllUrls = function () {
        return urls;
    };
}]);

/***/ }),

/***/ 55:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


angular.module('bahmni.common.uiHelper').service('confirmBox', ['$rootScope', 'ngDialog', function ($rootScope, ngDialog) {
    var dialog;
    var confirmBox = function (config) {
        var confirmBoxScope = $rootScope.$new();
        confirmBoxScope.close = function () {
            ngDialog.close(dialog.id);
            confirmBoxScope.$destroy();
        };
        confirmBoxScope.scope = config.scope;
        confirmBoxScope.actions = config.actions;
        dialog = ngDialog.open({
            templateUrl: 'ui-helper-confirm-box',
            scope: confirmBoxScope,
            className: config.className || 'ngdialog-theme-default'
        });
    };
    return confirmBox;
}]);

/***/ }),

/***/ 56:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


angular.module('bahmni.common.uiHelper').service('contextChangeHandler', ['$rootScope', function ($rootScope) {
    var callbacks = [];
    var self = this;

    $rootScope.$on('$stateChangeSuccess', function () {
        self.reset();
    });

    this.reset = function () {
        callbacks = [];
    };

    this.add = function (callback) {
        callbacks.push(callback);
    };

    this.execute = function () {
        var allow = true;
        var callBackReturn = null;
        var errorMessage = null;
        callbacks.forEach(function (callback) {
            callBackReturn = callback();
            allow = allow && callBackReturn["allow"];
            if (_.isEmpty(errorMessage)) {
                errorMessage = callBackReturn["errorMessage"];
            }
        });
        if (callBackReturn && errorMessage) {
            return { allow: allow, errorMessage: errorMessage };
        }
        return { allow: allow };
    };
}]);

/***/ }),

/***/ 57:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


angular.module('bahmni.common.uiHelper').service('messagingService', ['$rootScope', '$timeout', function ($rootScope, $timeout) {
    this.messages = { error: [], info: [] };
    var self = this;

    $rootScope.$on('event:serverError', function (event, errorMessage) {
        self.showMessage('error', errorMessage, 'serverError');
    });

    this.showMessage = function (level, message, errorEvent) {
        var messageObject = { 'value': '', 'isServerError': false };
        messageObject.value = message;
        if (errorEvent) {
            messageObject.isServerError = true;
        } else if (level == 'info') {
            this.createTimeout('info', 4000);
        }

        var index = _.findIndex(this.messages[level], function (msg) {
            return msg.value == messageObject.value;
        });

        if (index >= 0) {
            this.messages[level].splice(index, 1);
        }
        this.messages[level].push(messageObject);
    };

    this.createTimeout = function (level, time) {
        $timeout(function () {
            self.messages[level] = [];
        }, time, true);
    };

    this.hideMessages = function (level) {
        self.messages[level].length = 0;
    };

    this.clearAll = function () {
        self.messages["error"] = [];
        self.messages["info"] = [];
    };
}]);

/***/ }),

/***/ 58:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


angular.module('bahmni.common.uiHelper').service('stateChangeSpinner', ['$rootScope', 'spinner', function ($rootScope, spinner) {
    var showSpinner = function (event, toState) {
        toState.spinnerToken = spinner.show();
    };
    var hideSpinner = function (event, toState) {
        spinner.hide(toState.spinnerToken);
    };

    this.activate = function () {
        $rootScope.$on('$stateChangeStart', showSpinner);
        $rootScope.$on('$stateChangeSuccess', hideSpinner);
        $rootScope.$on('$stateChangeError', hideSpinner);
    };
}]);

/***/ }),

/***/ 59:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


angular.module('bahmni.common.uiHelper').filter('days', function () {
    return function (startDate, endDate) {
        return Bahmni.Common.Util.DateUtil.diffInDays(startDate, endDate);
    };
}).filter('bahmniDateTime', function () {
    return function (date) {
        return Bahmni.Common.Util.DateUtil.formatDateWithTime(date);
    };
}).filter('bahmniDate', function () {
    return function (date) {
        return Bahmni.Common.Util.DateUtil.formatDateWithoutTime(date);
    };
}).filter('bahmniTime', function () {
    return function (date) {
        return Bahmni.Common.Util.DateUtil.formatTime(date);
    };
}).filter('bahmniDateInStrictMode', function () {
    return function (date) {
        return Bahmni.Common.Util.DateUtil.formatDateInStrictMode(date);
    };
});

/***/ }),

/***/ 60:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


angular.module('bahmni.common.uiHelper').filter('formatDecimalValues', function () {
    return function (value) {
        return value ? value.toString().replace(/.0(\s+)/g, "$1") : null;
    };
});

/***/ }),

/***/ 61:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


angular.module('bahmni.common.uiHelper').filter('reverse', function () {
    return function (items) {
        return items && items.slice().reverse();
    };
});

/***/ }),

/***/ 62:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


angular.module('bahmni.common.uiHelper').filter('thumbnail', function () {
    return function (url, extension) {
        if (url) {
            if (extension) {
                return Bahmni.Common.Constants.documentsPath + '/' + url.replace(/(.*)\.(.*)$/, "$1_thumbnail." + extension) || null;
            }
            return Bahmni.Common.Constants.documentsPath + '/' + url.replace(/(.*)\.(.*)$/, "$1_thumbnail.$2") || null;
        }
    };
});

/***/ }),

/***/ 63:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


angular.module('bahmni.common.uiHelper').directive('bmBackLinks', function () {
    return {
        template: '<ul>' + '<li ng-repeat="backLink in backLinks">' + '<a class="back-btn" ng-if="backLink.action" accesskey="{{backLink.accessKey}}" ng-click="closeAllDialogs();backLink.action()" id="{{backLink.id}}"> <span ng-bind-html="backLink.label"></span> </a>' + '<a class="back-btn" ng-class="{\'dashboard-link\':backLink.image}" ng-if="backLink.url" accesskey="{{backLink.accessKey}}" ng-href="{{backLink.url}}" ng-click="closeAllDialogs()" id="{{backLink.id}}"  title="{{backLink.title}}"> ' + '<img ng-if="backLink.image" ng-src="{{backLink.image}}" onerror="this.onerror=null; this.src=\'../images/blank-user.gif\'"/>' + '<i ng-if="backLink.icon && !backLink.image" class="fa {{backLink.icon}}"></i></a>' + '<a class="back-btn" ng-if="backLink.state && !backLink.text" accesskey="{{backLink.accessKey}}" ui-sref="{{backLink.state}}" ng-click="closeAllDialogs()" id="{{backLink.id}}">' + '<i ng-if="backLink.icon" class="fa {{backLink.icon}}"></i></a>' + '<a ng-if="backLink.text && backLink.requiredPrivilege" show-if-privilege="{{backLink.requiredPrivilege}}" accesskey="{{backLink.accessKey}}" ui-sref="{{backLink.state}}" id="{{backLink.id}}" class="back-btn-noIcon" ui-sref-active="active">' + '<span>{{backLink.text | translate}}</span>' + '        </a>' + '<a ng-if="backLink.text && !backLink.requiredPrivilege" accesskey="{{backLink.accessKey}}" ui-sref="{{backLink.state}}" id="{{backLink.id}}" class="back-btn-noIcon" ui-sref-active="active">' + '<span>{{backLink.text | translate}}</span>' + '        </a>' + '</li>' + '</ul>',
        controller: ['$scope', 'backlinkService', function ($scope, backlinkService) {
            $scope.backLinks = backlinkService.getAllUrls();
            $scope.$on('$stateChangeSuccess', function (event, state) {
                if (state.data && state.data.backLinks) {
                    backlinkService.setUrls(state.data.backLinks);
                    $scope.backLinks = backlinkService.getAllUrls();
                }
            });

            $scope.$on("$destroy", function () {
                window.onbeforeunload = undefined;
            });
        }],
        restrict: 'E'
    };
});

/***/ }),

/***/ 64:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


angular.module('bahmni.common.uiHelper').directive('bahmniAutocomplete', ['$translate', function ($translate) {
    var link = function (scope, element, attrs, ngModelCtrl) {
        var source = scope.source();
        var responseMap = scope.responseMap && scope.responseMap();
        var onSelect = scope.onSelect();
        var onEdit = scope.onEdit && scope.onEdit();
        var minLength = scope.minLength || 2;
        var formElement = element[0];
        var validationMessage = scope.validationMessage || $translate.instant("SELECT_VALUE_FROM_AUTOCOMPLETE_DEFAULT_MESSAGE");

        var validateIfNeeded = function (value) {
            if (!scope.strictSelect) {
                return;
            }
            scope.isInvalid = value !== scope.selectedValue;
            if (_.isEmpty(value)) {
                scope.isInvalid = false;
            }
        };

        scope.$watch('initialValue', function () {
            if (scope.initialValue) {
                scope.selectedValue = scope.initialValue;
                scope.isInvalid = false;
            }
        });

        element.autocomplete({
            autofocus: true,
            minLength: minLength,
            source: function (request, response) {
                source({ elementId: attrs.id, term: request.term, elementType: attrs.type }).then(function (data) {
                    var results = responseMap ? responseMap(data) : data;
                    response(results);
                });
            },
            select: function (event, ui) {
                scope.selectedValue = ui.item.value;
                ngModelCtrl.$setViewValue(ui.item.value);
                if (onSelect != null) {
                    onSelect(ui.item);
                }
                validateIfNeeded(ui.item.value);
                if (scope.blurOnSelect) {
                    element.blur();
                }
                scope.$apply();
                scope.$eval(attrs.ngDisabled);
                scope.$apply();
                return true;
            },
            search: function (event, ui) {
                if (onEdit != null) {
                    onEdit(ui.item);
                }
                var searchTerm = $.trim(element.val());
                validateIfNeeded(searchTerm);
                if (searchTerm.length < minLength) {
                    event.preventDefault();
                }
            }
        });
        var changeHanlder = function (e) {
            validateIfNeeded(element.val());
        };

        var keyUpHandler = function (e) {
            validateIfNeeded(element.val());
            scope.$apply();
        };

        element.on('change', changeHanlder);
        element.on('keyup', keyUpHandler);

        scope.$watch('isInvalid', function () {
            ngModelCtrl.$setValidity('selection', !scope.isInvalid);
            formElement.setCustomValidity(scope.isInvalid ? validationMessage : '');
        });

        scope.$on("$destroy", function () {
            element.off('change', changeHanlder);
            element.off('keyup', keyUpHandler);
        });
    };

    return {
        link: link,
        require: 'ngModel',
        scope: {
            source: '&',
            responseMap: '&?',
            onSelect: '&',
            onEdit: '&?',
            minLength: '=?',
            blurOnSelect: '=?',
            strictSelect: '=?',
            validationMessage: '@',
            isInvalid: "=?",
            initialValue: "=?"
        }
    };
}]);

/***/ }),

/***/ 65:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


angular.module('bahmni.common.uiHelper').controller('MessageController', ['$scope', 'messagingService', function ($scope, messagingService) {
    $scope.messages = messagingService.messages;

    $scope.getMessageText = function (level) {
        var string = "";
        $scope.messages[level].forEach(function (message) {
            string = string.concat(message.value);
        });
        return string;
    };

    $scope.hideMessage = function (level) {
        messagingService.hideMessages(level);
    };

    $scope.isErrorMessagePresent = function () {
        return $scope.messages.error.length > 0;
    };

    $scope.isInfoMessagePresent = function () {
        return $scope.messages.info.length > 0;
    };
}]);

/***/ })

/******/ });
});