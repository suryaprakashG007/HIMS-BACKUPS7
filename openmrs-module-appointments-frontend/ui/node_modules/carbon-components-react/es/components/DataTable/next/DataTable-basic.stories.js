/**
 * Copyright IBM Corp. 2016, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import React from 'react';
import DataTable, { Table, TableBody, TableCell, TableContainer, TableHead, TableHeader, TableRow } from '..';
import mdx from '../DataTable.mdx';
export default {
  title: 'Components/DataTable/Basic',
  component: DataTable,
  subcomponents: {
    TableContainer: TableContainer,
    Table: Table,
    TableHead: TableHead,
    TableRow: TableRow,
    TableHeader: TableHeader,
    TableBody: TableBody,
    TableCell: TableCell
  },
  parameters: {
    docs: {
      page: mdx
    }
  }
};
export var DefaultLg = function DefaultLg() {
  var rows = [{
    id: 'load-balancer-1',
    name: 'Load Balancer 1',
    rule: 'Round robin',
    Status: 'Starting',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-2',
    name: 'Load Balancer 2',
    rule: 'DNS delegation',
    status: 'Active',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-3',
    name: 'Load Balancer 3',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-4',
    name: 'Load Balancer 4',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-5',
    name: 'Load Balancer 5',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-6',
    name: 'Load Balancer 6',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-7',
    name: 'Load Balancer 7',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }];
  var headers = ['Name', 'Rule', 'Status', 'Other', 'Example'];
  return /*#__PURE__*/React.createElement(Table, null, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRow, null, headers.map(function (header) {
    return /*#__PURE__*/React.createElement(TableHeader, {
      id: header.key,
      key: header
    }, header);
  }))), /*#__PURE__*/React.createElement(TableBody, null, rows.map(function (row) {
    return /*#__PURE__*/React.createElement(TableRow, {
      key: row.id
    }, Object.keys(row).filter(function (key) {
      return key !== 'id';
    }).map(function (key) {
      return /*#__PURE__*/React.createElement(TableCell, {
        key: key
      }, row[key]);
    }));
  })));
};
export var Xl = function Xl() {
  var rows = [{
    id: 'load-balancer-1',
    name: 'Load Balancer 1',
    rule: 'Round robin',
    Status: 'Starting',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-2',
    name: 'Load Balancer 2',
    rule: 'DNS delegation',
    status: 'Active',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-3',
    name: 'Load Balancer 3',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-4',
    name: 'Load Balancer 4',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-5',
    name: 'Load Balancer 5',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-6',
    name: 'Load Balancer 6',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-7',
    name: 'Load Balancer 7',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }];
  var headers = ['Name', 'Rule', 'Status', 'Other', 'Example'];
  return /*#__PURE__*/React.createElement(Table, {
    size: "tall"
  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRow, null, headers.map(function (header) {
    return /*#__PURE__*/React.createElement(TableHeader, {
      id: header.key,
      key: header
    }, header);
  }))), /*#__PURE__*/React.createElement(TableBody, null, rows.map(function (row) {
    return /*#__PURE__*/React.createElement(TableRow, {
      key: row.id
    }, Object.keys(row).filter(function (key) {
      return key !== 'id';
    }).map(function (key) {
      return /*#__PURE__*/React.createElement(TableCell, {
        key: key
      }, row[key]);
    }));
  })));
};
export var Sm = function Sm() {
  var rows = [{
    id: 'load-balancer-1',
    name: 'Load Balancer 1',
    rule: 'Round robin',
    Status: 'Starting',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-2',
    name: 'Load Balancer 2',
    rule: 'DNS delegation',
    status: 'Active',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-3',
    name: 'Load Balancer 3',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-4',
    name: 'Load Balancer 4',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-5',
    name: 'Load Balancer 5',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-6',
    name: 'Load Balancer 6',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-7',
    name: 'Load Balancer 7',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }];
  var headers = ['Name', 'Rule', 'Status', 'Other', 'Example'];
  return /*#__PURE__*/React.createElement(Table, {
    size: "sm"
  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRow, null, headers.map(function (header) {
    return /*#__PURE__*/React.createElement(TableHeader, {
      id: header.key,
      key: header
    }, header);
  }))), /*#__PURE__*/React.createElement(TableBody, null, rows.map(function (row) {
    return /*#__PURE__*/React.createElement(TableRow, {
      key: row.id
    }, Object.keys(row).filter(function (key) {
      return key !== 'id';
    }).map(function (key) {
      return /*#__PURE__*/React.createElement(TableCell, {
        key: key
      }, row[key]);
    }));
  })));
};
export var Xs = function Xs() {
  var rows = [{
    id: 'load-balancer-1',
    name: 'Load Balancer 1',
    rule: 'Round robin',
    Status: 'Starting',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-2',
    name: 'Load Balancer 2',
    rule: 'DNS delegation',
    status: 'Active',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-3',
    name: 'Load Balancer 3',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-4',
    name: 'Load Balancer 4',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-5',
    name: 'Load Balancer 5',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-6',
    name: 'Load Balancer 6',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-7',
    name: 'Load Balancer 7',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }];
  var headers = ['Name', 'Rule', 'Status', 'Other', 'Example'];
  return /*#__PURE__*/React.createElement(Table, {
    size: "compact"
  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRow, null, headers.map(function (header) {
    return /*#__PURE__*/React.createElement(TableHeader, {
      id: header.key,
      key: header
    }, header);
  }))), /*#__PURE__*/React.createElement(TableBody, null, rows.map(function (row) {
    return /*#__PURE__*/React.createElement(TableRow, {
      key: row.id
    }, Object.keys(row).filter(function (key) {
      return key !== 'id';
    }).map(function (key) {
      return /*#__PURE__*/React.createElement(TableCell, {
        key: key
      }, row[key]);
    }));
  })));
};
export var Zebra = function Zebra() {
  var rows = [{
    id: 'load-balancer-1',
    name: 'Load Balancer 1',
    rule: 'Round robin',
    status: 'Starting',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-2',
    name: 'Load Balancer 2',
    rule: 'DNS delegation',
    status: 'Active',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-3',
    name: 'Load Balancer 3',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-4',
    name: 'Load Balancer 4',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-5',
    name: 'Load Balancer 5',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-6',
    name: 'Load Balancer 6',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }, {
    id: 'load-balancer-7',
    name: 'Load Balancer 7',
    rule: 'Round robin',
    status: 'Disabled',
    other: 'Test',
    example: '22'
  }];
  var headers = ['Name', 'Rule', 'Status', 'Other', 'Example'];
  return /*#__PURE__*/React.createElement(Table, {
    useZebraStyles: true
  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRow, null, headers.map(function (header) {
    return /*#__PURE__*/React.createElement(TableHeader, {
      id: header.key,
      key: header
    }, header);
  }))), /*#__PURE__*/React.createElement(TableBody, null, rows.map(function (row) {
    return /*#__PURE__*/React.createElement(TableRow, {
      key: row.id
    }, Object.keys(row).filter(function (key) {
      return key !== 'id';
    }).map(function (key) {
      return /*#__PURE__*/React.createElement(TableCell, {
        key: key
      }, row[key]);
    }));
  })));
};