/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import React from 'react';
import { OverflowMenuV2 } from '.';
import { MenuItem } from '../Menu';
import { render, screen } from '@testing-library/react';
import userEvent from '@testing-library/user-event';
describe('OverflowMenu', function () {
  it('should render closed by default', function () {
    render( /*#__PURE__*/React.createElement(OverflowMenuV2, null, /*#__PURE__*/React.createElement(MenuItem, {
      label: "item",
      className: "test-child"
    }, "one"), /*#__PURE__*/React.createElement(MenuItem, {
      label: "item",
      className: "test-child"
    }, "two")));
    var ul = document.querySelector('ul');
    expect(screen.getByRole('button')).toHaveAttribute('aria-expanded', 'false');
    expect(ul).toBe(null);
  });
  it('should be in an open state after trigger is clicked', function () {
    render( /*#__PURE__*/React.createElement(OverflowMenuV2, null, /*#__PURE__*/React.createElement(MenuItem, {
      label: "item",
      className: "test-child"
    }, "one"), /*#__PURE__*/React.createElement(MenuItem, {
      label: "item",
      className: "test-child"
    }, "two")));
    userEvent.type(screen.getByRole('button'), 'enter');
    expect(screen.getByRole('button')).toHaveAttribute('aria-expanded', 'true');
    var ul = document.querySelector('ul');
    expect(ul).toBeInTheDocument();
  });
  it('should add custom classNames', function () {
    render( /*#__PURE__*/React.createElement(OverflowMenuV2, {
      className: "extra-class"
    }, /*#__PURE__*/React.createElement(MenuItem, {
      label: "item",
      className: "test-child"
    }, "one"), /*#__PURE__*/React.createElement(MenuItem, {
      label: "item",
      className: "test-child"
    }, "two")));
    expect(screen.getByRole('button')).toHaveClass('extra-class');
  });
  it('should set a tab index if one is given', function () {
    render( /*#__PURE__*/React.createElement(OverflowMenuV2, {
      "tab-index": "2"
    }, /*#__PURE__*/React.createElement(MenuItem, {
      label: "item",
      className: "test-child"
    }, "one"), /*#__PURE__*/React.createElement(MenuItem, {
      label: "item",
      className: "test-child"
    }, "two")));
    expect(screen.getByRole('button')).toHaveAttribute('tab-index', '2');
  });
  it('should set an aria-label if one is given', function () {
    render( /*#__PURE__*/React.createElement(OverflowMenuV2, {
      "aria-label": "aria-label"
    }, /*#__PURE__*/React.createElement(MenuItem, {
      label: "item",
      className: "test-child"
    }, "one"), /*#__PURE__*/React.createElement(MenuItem, {
      label: "item",
      className: "test-child"
    }, "two")));
    expect(screen.getByRole('button')).toHaveAttribute('aria-label', 'aria-label');
  });
  it('should set an id if one is given', function () {
    render( /*#__PURE__*/React.createElement(OverflowMenuV2, {
      id: "custom-id"
    }, /*#__PURE__*/React.createElement(MenuItem, {
      label: "item",
      className: "test-child"
    }, "one"), /*#__PURE__*/React.createElement(MenuItem, {
      label: "item",
      className: "test-child"
    }, "two")));
    expect(screen.getByRole('button')).toHaveAttribute('id', 'custom-id');
  });
  it('should close menu on outside click', function () {
    render( /*#__PURE__*/React.createElement(OverflowMenuV2, null, /*#__PURE__*/React.createElement(MenuItem, {
      label: "item",
      className: "test-child"
    }, "one"), /*#__PURE__*/React.createElement(MenuItem, {
      label: "item",
      className: "test-child"
    }, "two")));
    userEvent.type(screen.getByRole('button'), 'enter');
    expect(screen.getByRole('button')).toHaveAttribute('aria-expanded', 'true');
    userEvent.click(document.body);
    expect(screen.getByRole('button')).toHaveAttribute('aria-expanded', 'false');
  });
});