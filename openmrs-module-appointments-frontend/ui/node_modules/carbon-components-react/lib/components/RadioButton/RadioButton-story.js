"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Playground = exports.Default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _addonActions = require("@storybook/addon-actions");

var _addonKnobs = require("@storybook/addon-knobs");

var _RadioButtonGroup = _interopRequireDefault(require("../RadioButtonGroup"));

var _RadioButton = _interopRequireDefault(require("../RadioButton"));

var _RadioButton2 = _interopRequireDefault(require("./RadioButton.mdx"));

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var values = {
  'Option 1': 'radio-1',
  'Option 2': 'radio-2',
  'Option 3': 'radio-3'
};
var orientations = {
  'Horizontal (horizontal)': 'horizontal',
  'Vertical (vertical)': 'vertical'
};
var labelPositions = {
  'Left (left)': 'left',
  'Right (right)': 'right'
};
var props = {
  group: function group() {
    return {
      hideLegend: (0, _addonKnobs.boolean)('Hide the legend (hideLegend) of the RadioButtonGroup (legendText)', false),
      legendText: (0, _addonKnobs.text)('The label (legend) of the RadioButtonGroup (legendText)', 'Radio button heading'),
      name: (0, _addonKnobs.text)('The form control name (name in <RadioButtonGroup>)', 'radio-button-group'),
      valueSelected: (0, _addonKnobs.select)('Value of the selected button (valueSelected in <RadioButtonGroup>)', values, 'radio-3'),
      orientation: (0, _addonKnobs.select)('Radio button orientation (orientation)', orientations, 'horizontal'),
      labelPosition: (0, _addonKnobs.select)('Label position (labelPosition)', labelPositions, 'right'),
      onChange: (0, _addonActions.action)('onChange')
    };
  },
  radio: function radio() {
    return {
      className: 'some-class',
      disabled: (0, _addonKnobs.boolean)('Disabled (disabled in <RadioButton>)', false),
      labelText: (0, _addonKnobs.text)('The label of the RadioButton (labelText)', 'Option 1')
    };
  }
};
var _default = {
  title: 'Components/RadioButton',
  component: _RadioButtonGroup.default,
  decorators: [_addonKnobs.withKnobs],
  parameters: {
    docs: {
      page: _RadioButton2.default
    }
  },
  subcomponents: {
    RadioButton: _RadioButton.default
  }
};
exports.default = _default;

var Default = function Default() {
  return /*#__PURE__*/_react.default.createElement(_RadioButtonGroup.default, {
    legendText: "Radio button heading",
    name: "radio-button-group",
    defaultSelected: "radio-1"
  }, /*#__PURE__*/_react.default.createElement(_RadioButton.default, {
    labelText: "Option 1",
    value: "radio-1",
    id: "radio-1"
  }), /*#__PURE__*/_react.default.createElement(_RadioButton.default, {
    labelText: "Option 2",
    value: "radio-2",
    id: "radio-2"
  }), /*#__PURE__*/_react.default.createElement(_RadioButton.default, {
    labelText: "Option 3",
    value: "radio-3",
    id: "radio-3"
  }));
};

exports.Default = Default;

var Playground = function Playground() {
  var radioProps = props.radio();
  return /*#__PURE__*/_react.default.createElement(_RadioButtonGroup.default, (0, _extends2.default)({
    labelText: "Radio Button group"
  }, props.group()), /*#__PURE__*/_react.default.createElement(_RadioButton.default, (0, _extends2.default)({
    value: "radio-1",
    id: "radio-1"
  }, radioProps)), /*#__PURE__*/_react.default.createElement(_RadioButton.default, {
    labelText: "Option 2",
    value: "radio-2",
    id: "radio-2"
  }), /*#__PURE__*/_react.default.createElement(_RadioButton.default, {
    labelText: "Option 3",
    value: "radio-3",
    id: "radio-3"
  }));
};

exports.Playground = Playground;