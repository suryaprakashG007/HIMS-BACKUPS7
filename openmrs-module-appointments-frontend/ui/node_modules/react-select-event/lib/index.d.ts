/** Simulate user events on react-select dropdowns */
/**
 * Utility for selecting a value in a `react-select` dropdown.
 * @param input The input field (eg. `getByLabelText('The label')`)
 * @param optionOrOptions The display name(s) for the option(s) to select
 */
export declare const select: (input: HTMLElement, optionOrOptions: string | RegExp | (string | RegExp)[]) => Promise<void>;
/**
 * Utility for creating and selecting a value in a Creatable `react-select` dropdown.
 * @async
 * @param input The input field (eg. `getByLabelText('The label')`)
 * @param option The display name for the option to type and select
 * @param createOptionText Custom label for the "create new ..." option in the menu (string or regexp)
 */
export declare const create: (input: HTMLElement, option: string, createOptionText?: string | RegExp) => Promise<void>;
/**
 * Utility for clearing the first value of a `react-select` dropdown.
 * @param input The input field (eg. `getByLabelText('The label')`)
 */
export declare const clearFirst: (input: HTMLElement) => void;
/**
 * Utility for clearing all values in a `react-select` dropdown.
 * @param input The input field (eg. `getByLabelText('The label')`)
 */
export declare const clearAll: (input: HTMLElement) => void;
declare const _default: {
    select: (input: HTMLElement, optionOrOptions: string | RegExp | (string | RegExp)[]) => Promise<void>;
    create: (input: HTMLElement, option: string, createOptionText?: string | RegExp) => Promise<void>;
    clearFirst: (input: HTMLElement) => void;
    clearAll: (input: HTMLElement) => void;
};
export default _default;
