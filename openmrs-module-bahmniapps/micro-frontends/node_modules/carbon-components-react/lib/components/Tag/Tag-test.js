"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _iconsReact = require("@carbon/icons-react");

var _react = require("@testing-library/react");

var _react2 = _interopRequireDefault(require("react"));

var _ = _interopRequireDefault(require("./"));

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
describe('Tag', function () {
  describe('automated accessibility testing', function () {
    it('should have no Axe violations', /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
      var _render, container;

      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _render = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_.default, {
                type: "red"
              }, "test-tag")), container = _render.container;
              _context.next = 3;
              return expect(container).toHaveNoAxeViolations();

            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    })));
    it('should have no AC violations', /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
      var _render2, container;

      return _regenerator.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _render2 = (0, _react.render)( /*#__PURE__*/_react2.default.createElement("main", null, /*#__PURE__*/_react2.default.createElement(_.default, {
                type: "red"
              }, "Dog"))), container = _render2.container;
              _context2.next = 3;
              return expect(container).toHaveNoACViolations('Tag');

            case 3:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    })));
  });
  it('should have an appropriate aria-label when (filterable)', function () {
    var children = 'tag-3';

    var _render3 = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_.default, {
      type: "red",
      filter: true
    }, children)),
        container = _render3.container;

    var button = container.querySelector('[aria-labelledby]');
    var accessibilityLabel = button.getAttribute('aria-labelledby'); // This check would mirror our "Accessibility label must contain at least all of visible label"
    // requirement

    expect(accessibilityLabel).toEqual(expect.stringContaining(children));
  });
  it('should allow for a custom label', function () {
    (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_.default, {
      type: "red"
    }, "Johnny Ramone"));
    expect(_react.screen.getByText('Johnny Ramone')).toBeInTheDocument();
  });
  it('should allow for a custom icon', function () {
    (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_.default, {
      type: "red",
      renderIcon: function renderIcon() {
        return /*#__PURE__*/_react2.default.createElement(_iconsReact.Add16, {
          "data-testid": "test"
        });
      }
    }, "Dee Dee Ramone"));
    expect(_react.screen.getByTestId('test')).toBeInTheDocument();
  });
});