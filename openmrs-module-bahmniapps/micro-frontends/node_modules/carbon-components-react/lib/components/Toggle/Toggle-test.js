"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _Toggle = _interopRequireDefault(require("../Toggle"));

var _react2 = require("@testing-library/react");

var _userEvent = _interopRequireDefault(require("@testing-library/user-event"));

require("../../../../components/scss/components/toggle/_toggle.scss");

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
describe('Toggle RTL', function () {
  describe('Behaviors', function () {
    it('toggles on click', function () {
      (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_Toggle.default, {
        id: "test-id"
      }));
      expect(_react2.screen.getByText('Off')).toBeVisible();
      expect(_react2.screen.getByText('On')).not.toBeVisible();

      _userEvent.default.click(_react2.screen.getByRole('checkbox'));

      expect(_react2.screen.getByText('On')).toBeVisible();
      expect(_react2.screen.getByText('Off')).not.toBeVisible();
    });
    it('toggles on keydown - enter', function () {
      (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_Toggle.default, {
        id: "test-id"
      }));
      expect(_react2.screen.getByText('Off')).toBeVisible();
      expect(_react2.screen.getByText('On')).not.toBeVisible();

      _userEvent.default.type(_react2.screen.getByRole('checkbox'), 'enter');

      expect(_react2.screen.getByText('On')).toBeVisible();
      expect(_react2.screen.getByText('Off')).not.toBeVisible();
    });
    it('toggles on keydown - space', function () {
      (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_Toggle.default, {
        id: "test-id"
      }));
      expect(_react2.screen.getByText('Off')).toBeVisible();
      expect(_react2.screen.getByText('On')).not.toBeVisible();

      _userEvent.default.type(_react2.screen.getByRole('checkbox'), 'space');

      expect(_react2.screen.getByText('On')).toBeVisible();
      expect(_react2.screen.getByText('Off')).not.toBeVisible();
    });
  });
  describe('Props', function () {
    it('add custom class name to wrapper div', function () {
      var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_Toggle.default, {
        id: "test-id",
        className: "custom-class"
      })),
          container = _render.container;

      expect(container.firstChild).toHaveClass('custom-class');
    });
    it('sets toggled based on defaultToggled on render', function () {
      (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_Toggle.default, {
        id: "test-id",
        defaultToggled: true
      }));
      expect(_react2.screen.getByText('On')).toBeVisible();
    });
    it('calls onChange when the control is changed', function () {
      var onChange = jest.fn();
      (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_Toggle.default, {
        id: "test-id",
        onChange: onChange
      }));

      _userEvent.default.click(_react2.screen.getByRole('checkbox'));

      expect(onChange).toHaveBeenCalled();
    });
    it('calls onToggle when toggled', function () {
      var onToggle = jest.fn();
      (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_Toggle.default, {
        id: "test-id",
        onToggle: onToggle
      }));

      _userEvent.default.click(_react2.screen.getByRole('checkbox'));

      expect(onToggle).toHaveBeenCalled();
    });
    it('takes in custom labels for toggled and untoggled states', function () {
      (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_Toggle.default, {
        id: "test-id",
        labelA: "test On",
        labelB: "test Off"
      }));
      expect(_react2.screen.getByText('test On')).toBeInTheDocument();
      expect(_react2.screen.getByText('test Off')).toBeInTheDocument();
    });
    it('sets toggled based on toggled prop', function () {
      var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_Toggle.default, {
        id: "test-id",
        toggled: false
      })),
          rerender = _render2.rerender;

      expect(_react2.screen.getByText('Off')).toBeVisible();
      rerender( /*#__PURE__*/_react.default.createElement(_Toggle.default, {
        id: "test-id",
        toggled: true
      }));
      expect(_react2.screen.getByText('On')).toBeVisible();
    });
    it('passes extra props to input', function () {
      (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_Toggle.default, {
        id: "test-id",
        "aria-disabled": true
      }));
      expect(_react2.screen.getByRole('checkbox')).toHaveAttribute('aria-disabled', 'true');
    });
  });
});