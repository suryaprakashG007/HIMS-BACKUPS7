"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.WithLayer = exports.Default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _SelectItem = _interopRequireDefault(require("../../SelectItem"));

var _ = _interopRequireDefault(require("../"));

var _TimePickerSelect = _interopRequireDefault(require("../../TimePickerSelect"));

var _Layer = require("../../Layer");

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
// const props = {
//   timepicker: () => ({
//     pattern: text(
//       'Regular expression for the value (pattern in <TimePicker>)',
//       '(1[012]|[1-9]):[0-5][0-9](\\s)?'
//     ),
//     placeholder: text(
//       'Placeholder text (placeholder in <TimePicker>)',
//       'hh:mm'
//     ),
//     disabled: boolean('Disabled (disabled in <TimePicker>)', false),
//     light: boolean('Light variant (light in <TimePicker>)', false),
//     labelText: text('Label text (labelText in <TimePicker>)', 'Select a time'),
//     invalid: boolean(
//       'Show form validation UI (invalid in <TimePicker>)',
//       false
//     ),
//     invalidText: text(
//       'Form validation UI content (invalidText in <TimePicker>)',
//       'A valid value is required'
//     ),
//     maxLength: number('Maximum length (maxLength in <TimePicker>)', 5),
//     size: select('Field size (size)', sizes, undefined) || undefined,
//     onClick: action('onClick'),
//     onChange: action('onChange'),
//     onBlur: action('onBlur'),
//   }),
//   select: () => ({
//     disabled: boolean('Disabled (disabled in <TimePickerSelect>)', false),
//     labelText: text(
//       'Label text (labelText in <TimePickerSelect>)',
//       'Please select'
//     ),
//     iconDescription: text(
//       'Trigger icon description (iconDescription in <TimePickerSelect>)',
//       'open list of options'
//     ),
//   }),
// };
var _default = {
  title: 'Components/TimePicker',
  component: _.default,
  argTypes: {
    size: {
      options: ['sm', 'md', 'lg'],
      control: {
        type: 'select'
      }
    }
  },
  args: {
    size: 'md'
  },
  subcomponents: {
    TimePickerSelect: _TimePickerSelect.default,
    SelectItem: _SelectItem.default
  }
};
exports.default = _default;

var Default = function Default(args) {
  return /*#__PURE__*/_react.default.createElement(_.default, (0, _extends2.default)({
    id: "time-picker",
    labelText: "Select a time"
  }, args), /*#__PURE__*/_react.default.createElement(_TimePickerSelect.default, {
    id: "time-picker-select-1"
  }, /*#__PURE__*/_react.default.createElement(_SelectItem.default, {
    value: "AM",
    text: "AM"
  }), /*#__PURE__*/_react.default.createElement(_SelectItem.default, {
    value: "PM",
    text: "PM"
  })), /*#__PURE__*/_react.default.createElement(_TimePickerSelect.default, {
    id: "time-picker-select-2"
  }, /*#__PURE__*/_react.default.createElement(_SelectItem.default, {
    value: "Time zone 1",
    text: "Time zone 1"
  }), /*#__PURE__*/_react.default.createElement(_SelectItem.default, {
    value: "Time zone 2",
    text: "Time zone 2"
  })));
};

exports.Default = Default;

var WithLayer = function WithLayer(args) {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_.default, (0, _extends2.default)({
    id: "time-picker",
    labelText: "First layer"
  }, args), /*#__PURE__*/_react.default.createElement(_TimePickerSelect.default, {
    id: "time-picker-select-1"
  }, /*#__PURE__*/_react.default.createElement(_SelectItem.default, {
    value: "AM",
    text: "AM"
  }), /*#__PURE__*/_react.default.createElement(_SelectItem.default, {
    value: "PM",
    text: "PM"
  })), /*#__PURE__*/_react.default.createElement(_TimePickerSelect.default, {
    id: "time-picker-select-2"
  }, /*#__PURE__*/_react.default.createElement(_SelectItem.default, {
    value: "Time zone 1",
    text: "Time zone 1"
  }), /*#__PURE__*/_react.default.createElement(_SelectItem.default, {
    value: "Time zone 2",
    text: "Time zone 2"
  }))), /*#__PURE__*/_react.default.createElement(_Layer.Layer, null, /*#__PURE__*/_react.default.createElement(_.default, (0, _extends2.default)({
    id: "time-picker",
    labelText: "Second layer"
  }, args), /*#__PURE__*/_react.default.createElement(_TimePickerSelect.default, {
    id: "time-picker-select-1"
  }, /*#__PURE__*/_react.default.createElement(_SelectItem.default, {
    value: "AM",
    text: "AM"
  }), /*#__PURE__*/_react.default.createElement(_SelectItem.default, {
    value: "PM",
    text: "PM"
  })), /*#__PURE__*/_react.default.createElement(_TimePickerSelect.default, {
    id: "time-picker-select-2"
  }, /*#__PURE__*/_react.default.createElement(_SelectItem.default, {
    value: "Time zone 1",
    text: "Time zone 1"
  }), /*#__PURE__*/_react.default.createElement(_SelectItem.default, {
    value: "Time zone 2",
    text: "Time zone 2"
  }))), /*#__PURE__*/_react.default.createElement(_Layer.Layer, null, /*#__PURE__*/_react.default.createElement(_.default, (0, _extends2.default)({
    id: "time-picker",
    labelText: "Third layer"
  }, args), /*#__PURE__*/_react.default.createElement(_TimePickerSelect.default, {
    id: "time-picker-select-1"
  }, /*#__PURE__*/_react.default.createElement(_SelectItem.default, {
    value: "AM",
    text: "AM"
  }), /*#__PURE__*/_react.default.createElement(_SelectItem.default, {
    value: "PM",
    text: "PM"
  })), /*#__PURE__*/_react.default.createElement(_TimePickerSelect.default, {
    id: "time-picker-select-2"
  }, /*#__PURE__*/_react.default.createElement(_SelectItem.default, {
    value: "Time zone 1",
    text: "Time zone 1"
  }), /*#__PURE__*/_react.default.createElement(_SelectItem.default, {
    value: "Time zone 2",
    text: "Time zone 2"
  }))))));
};

exports.WithLayer = WithLayer;