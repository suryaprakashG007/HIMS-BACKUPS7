"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof3 = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ModalHeader = exports.ModalFooter = exports.ModalBody = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty3 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Button = _interopRequireDefault(require("../Button"));

var _ButtonSet = _interopRequireDefault(require("../ButtonSet"));

var _classnames = _interopRequireDefault(require("classnames"));

var _iconsReact = require("@carbon/icons-react");

var _toggleClass = _interopRequireDefault(require("../../tools/toggleClass"));

var _requiredIfGivenPropIsTruthy = _interopRequireDefault(require("../../prop-types/requiredIfGivenPropIsTruthy"));

var _wrapFocus = _interopRequireDefault(require("../../internal/wrapFocus"));

var _usePrefix = require("../../internal/usePrefix");

var _defineProperty2, _ModalBody$propTypes;

var _excluded = ["aria-labelledby", "aria-label", "className", "containerClassName", "children", "danger", "preventCloseOnClickOutside", "selectorPrimaryFocus", "selectorsFloatingMenus", "size", "forwardedRef"],
    _excluded2 = ["className", "labelClassName", "titleClassName", "closeClassName", "closeIconClassName", "label", "title", "children", "iconDescription", "closeModal", "buttonOnClick", "preventCloseOnClickOutside", "forwardedRef"],
    _excluded3 = ["className", "children", "hasForm", "hasScrollingContent", "preventCloseOnClickOutside"],
    _excluded4 = ["className", "primaryClassName", "secondaryButtons", "secondaryClassName", "secondaryButtonText", "primaryButtonText", "primaryButtonDisabled", "closeModal", "onRequestClose", "onRequestSubmit", "children", "danger", "inputref", "forwardedRef"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof3(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var ComposedModal = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(ComposedModal, _Component);

  var _super = _createSuper(ComposedModal);

  function ComposedModal() {
    var _this;

    (0, _classCallCheck2.default)(this, ComposedModal);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty3.default)((0, _assertThisInitialized2.default)(_this), "state", {});
    (0, _defineProperty3.default)((0, _assertThisInitialized2.default)(_this), "outerModal", /*#__PURE__*/_react.default.createRef());
    (0, _defineProperty3.default)((0, _assertThisInitialized2.default)(_this), "innerModal", /*#__PURE__*/_react.default.createRef());
    (0, _defineProperty3.default)((0, _assertThisInitialized2.default)(_this), "button", /*#__PURE__*/_react.default.createRef());
    (0, _defineProperty3.default)((0, _assertThisInitialized2.default)(_this), "startSentinel", /*#__PURE__*/_react.default.createRef());
    (0, _defineProperty3.default)((0, _assertThisInitialized2.default)(_this), "endSentinel", /*#__PURE__*/_react.default.createRef());
    (0, _defineProperty3.default)((0, _assertThisInitialized2.default)(_this), "handleKeyDown", function (evt) {
      // Esc key
      if (evt.which === 27) {
        _this.closeModal(evt);
      }

      _this.props.onKeyDown(evt);
    });
    (0, _defineProperty3.default)((0, _assertThisInitialized2.default)(_this), "handleClick", function (evt) {
      if (!_this.innerModal.current.contains(evt.target) && _this.props.preventCloseOnClickOutside) {
        return;
      }

      if (_this.innerModal.current && !_this.innerModal.current.contains(evt.target)) {
        _this.closeModal(evt);
      }
    });
    (0, _defineProperty3.default)((0, _assertThisInitialized2.default)(_this), "handleBlur", function (_ref) {
      var oldActiveNode = _ref.target,
          currentActiveNode = _ref.relatedTarget;
      var _this$props = _this.props,
          open = _this$props.open,
          selectorsFloatingMenus = _this$props.selectorsFloatingMenus;

      if (open && currentActiveNode && oldActiveNode) {
        var bodyNode = _this.innerModal.current;
        var startSentinelNode = _this.startSentinel.current;
        var endSentinelNode = _this.endSentinel.current;
        (0, _wrapFocus.default)({
          bodyNode: bodyNode,
          startSentinelNode: startSentinelNode,
          endSentinelNode: endSentinelNode,
          currentActiveNode: currentActiveNode,
          oldActiveNode: oldActiveNode,
          selectorsFloatingMenus: selectorsFloatingMenus
        });
      }
    });
    (0, _defineProperty3.default)((0, _assertThisInitialized2.default)(_this), "focusButton", function (focusContainerElement) {
      if (focusContainerElement) {
        var primaryFocusElement = focusContainerElement.querySelector(_this.props.selectorPrimaryFocus);

        if (primaryFocusElement) {
          primaryFocusElement.focus();
          return;
        }

        if (_this.button.current) {
          _this.button.current.focus();
        }
      }
    });
    (0, _defineProperty3.default)((0, _assertThisInitialized2.default)(_this), "handleTransitionEnd", function (evt) {
      if (_this.outerModal.current.offsetWidth && _this.outerModal.current.offsetHeight && _this.beingOpen) {
        _this.focusButton(evt.currentTarget);

        _this.beingOpen = false;
      }
    });
    (0, _defineProperty3.default)((0, _assertThisInitialized2.default)(_this), "closeModal", function (evt) {
      var onClose = _this.props.onClose;

      if (!onClose || onClose(evt) !== false) {
        _this.setState({
          open: false
        });
      }
    });
    return _this;
  }

  (0, _createClass2.default)(ComposedModal, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (!prevState.open && this.state.open) {
        this.beingOpen = true;
      } else if (prevState.open && !this.state.open) {
        this.beingOpen = false;
      }

      if (prevState.open !== this.state.open) {
        (0, _toggleClass.default)(document.body, "".concat(this.context, "--body--with-modal-open"), this.state.open);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _toggleClass.default)(document.body, "".concat(this.context, "--body--with-modal-open"), false);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _toggleClass.default)(document.body, "".concat(this.context, "--body--with-modal-open"), this.props.open);

      if (!this.props.open) {
        return;
      }

      if (this.innerModal.current) {
        this.focusButton(this.innerModal.current);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _classNames,
          _classNames2,
          _this2 = this;

      var open = this.state.open;
      var prefix = this.context;
      var _this$props2 = this.props,
          ariaLabelledBy = _this$props2['aria-labelledby'],
          ariaLabel = _this$props2['aria-label'],
          className = _this$props2.className,
          containerClassName = _this$props2.containerClassName,
          children = _this$props2.children,
          danger = _this$props2.danger,
          preventCloseOnClickOutside = _this$props2.preventCloseOnClickOutside,
          selectorPrimaryFocus = _this$props2.selectorPrimaryFocus,
          selectorsFloatingMenus = _this$props2.selectorsFloatingMenus,
          size = _this$props2.size,
          forwardedRef = _this$props2.forwardedRef,
          other = (0, _objectWithoutProperties2.default)(_this$props2, _excluded);
      var modalClass = (0, _classnames.default)((_classNames = {}, (0, _defineProperty3.default)(_classNames, "".concat(prefix, "--modal"), true), (0, _defineProperty3.default)(_classNames, 'is-visible', open), (0, _defineProperty3.default)(_classNames, className, className), (0, _defineProperty3.default)(_classNames, "".concat(prefix, "--modal--danger"), danger), _classNames));
      var containerClass = (0, _classnames.default)((_classNames2 = {}, (0, _defineProperty3.default)(_classNames2, "".concat(prefix, "--modal-container"), true), (0, _defineProperty3.default)(_classNames2, "".concat(prefix, "--modal-container--").concat(size), size), (0, _defineProperty3.default)(_classNames2, containerClassName, containerClassName), _classNames2)); // Generate aria-label based on Modal Header label if one is not provided (L253)

      var generatedAriaLabel;

      var childrenWithProps = _react.default.Children.toArray(children).map(function (child) {
        switch (child.type) {
          case /*#__PURE__*/_react.default.createElement(ModalHeader).type:
            generatedAriaLabel = child.props.label;
            return /*#__PURE__*/_react.default.cloneElement(child, {
              closeModal: _this2.closeModal
            });

          case /*#__PURE__*/_react.default.createElement(ModalFooter).type:
            return /*#__PURE__*/_react.default.cloneElement(child, {
              closeModal: _this2.closeModal,
              inputref: _this2.button
            });

          default:
            return child;
        }
      });

      return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({}, other, {
        role: "presentation",
        ref: function ref(node) {
          if (node) {
            _this2.outerModal.current = node;

            if (typeof forwardedRef === 'function') {
              forwardedRef(node);
            } else if ((0, _typeof2.default)(forwardedRef) === 'object') {
              forwardedRef.current = node;
            }
          }
        },
        "aria-hidden": !open,
        onBlur: this.handleBlur,
        onClick: this.handleClick,
        onKeyDown: this.handleKeyDown,
        onTransitionEnd: open ? this.handleTransitionEnd : undefined,
        className: modalClass
      }), /*#__PURE__*/_react.default.createElement("div", {
        className: containerClass,
        role: "dialog",
        "aria-modal": "true",
        "aria-label": ariaLabel ? ariaLabel : generatedAriaLabel,
        "aria-labelledby": ariaLabelledBy
      }, /*#__PURE__*/_react.default.createElement("button", {
        type: "button",
        ref: this.startSentinel,
        className: "".concat(prefix, "--visually-hidden")
      }, "Focus sentinel"), /*#__PURE__*/_react.default.createElement("div", {
        ref: this.innerModal,
        className: "".concat(prefix, "--modal-container-body")
      }, childrenWithProps), /*#__PURE__*/_react.default.createElement("button", {
        type: "button",
        ref: this.endSentinel,
        className: "".concat(prefix, "--visually-hidden")
      }, "Focus sentinel")));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(_ref2, state) {
      var open = _ref2.open;
      var prevOpen = state.prevOpen;
      return prevOpen === open ? null : {
        open: open,
        prevOpen: open
      };
    }
  }]);
  return ComposedModal;
}(_react.Component);

exports.default = ComposedModal;
(0, _defineProperty3.default)(ComposedModal, "contextType", _usePrefix.PrefixContext);
(0, _defineProperty3.default)(ComposedModal, "defaultProps", {
  onKeyDown: function onKeyDown() {},
  selectorPrimaryFocus: '[data-modal-primary-focus]'
});
(0, _defineProperty3.default)(ComposedModal, "propTypes", (_defineProperty2 = {}, (0, _defineProperty3.default)(_defineProperty2, 'aria-label', _propTypes.default.string), (0, _defineProperty3.default)(_defineProperty2, 'aria-labelledby', _propTypes.default.string), (0, _defineProperty3.default)(_defineProperty2, "children", _propTypes.default.node), (0, _defineProperty3.default)(_defineProperty2, "className", _propTypes.default.string), (0, _defineProperty3.default)(_defineProperty2, "containerClassName", _propTypes.default.string), (0, _defineProperty3.default)(_defineProperty2, "danger", _propTypes.default.bool), (0, _defineProperty3.default)(_defineProperty2, "onClose", _propTypes.default.func), (0, _defineProperty3.default)(_defineProperty2, "onKeyDown", _propTypes.default.func), (0, _defineProperty3.default)(_defineProperty2, "open", _propTypes.default.bool), (0, _defineProperty3.default)(_defineProperty2, "preventCloseOnClickOutside", _propTypes.default.bool), (0, _defineProperty3.default)(_defineProperty2, "selectorPrimaryFocus", _propTypes.default.string), (0, _defineProperty3.default)(_defineProperty2, "selectorsFloatingMenus", _propTypes.default.arrayOf(_propTypes.default.string)), (0, _defineProperty3.default)(_defineProperty2, "size", _propTypes.default.oneOf(['xs', 'sm', 'md', 'lg'])), _defineProperty2));

var ModalHeader = /*#__PURE__*/function (_Component2) {
  (0, _inherits2.default)(ModalHeader, _Component2);

  var _super2 = _createSuper(ModalHeader);

  function ModalHeader() {
    var _this3;

    (0, _classCallCheck2.default)(this, ModalHeader);

    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    _this3 = _super2.call.apply(_super2, [this].concat(args));
    (0, _defineProperty3.default)((0, _assertThisInitialized2.default)(_this3), "handleCloseButtonClick", function (evt) {
      _this3.props.closeModal(evt);

      _this3.props.buttonOnClick();
    });
    return _this3;
  }

  (0, _createClass2.default)(ModalHeader, [{
    key: "render",
    value: function render() {
      var _classNames3, _classNames4, _classNames5, _classNames6, _classNames7;

      var _this$props3 = this.props,
          className = _this$props3.className,
          labelClassName = _this$props3.labelClassName,
          titleClassName = _this$props3.titleClassName,
          closeClassName = _this$props3.closeClassName,
          closeIconClassName = _this$props3.closeIconClassName,
          label = _this$props3.label,
          title = _this$props3.title,
          children = _this$props3.children,
          iconDescription = _this$props3.iconDescription,
          closeModal = _this$props3.closeModal,
          buttonOnClick = _this$props3.buttonOnClick,
          preventCloseOnClickOutside = _this$props3.preventCloseOnClickOutside,
          forwardedRef = _this$props3.forwardedRef,
          other = (0, _objectWithoutProperties2.default)(_this$props3, _excluded2);
      var prefix = this.context;
      var headerClass = (0, _classnames.default)((_classNames3 = {}, (0, _defineProperty3.default)(_classNames3, "".concat(prefix, "--modal-header"), true), (0, _defineProperty3.default)(_classNames3, className, className), _classNames3));
      var labelClass = (0, _classnames.default)((_classNames4 = {}, (0, _defineProperty3.default)(_classNames4, "".concat(prefix, "--modal-header__label ").concat(prefix, "--type-delta"), true), (0, _defineProperty3.default)(_classNames4, labelClassName, labelClassName), _classNames4));
      var titleClass = (0, _classnames.default)((_classNames5 = {}, (0, _defineProperty3.default)(_classNames5, "".concat(prefix, "--modal-header__heading ").concat(prefix, "--type-beta"), true), (0, _defineProperty3.default)(_classNames5, titleClassName, titleClassName), _classNames5));
      var closeClass = (0, _classnames.default)((_classNames6 = {}, (0, _defineProperty3.default)(_classNames6, "".concat(prefix, "--modal-close"), true), (0, _defineProperty3.default)(_classNames6, closeClassName, closeClassName), _classNames6));
      var closeIconClass = (0, _classnames.default)((_classNames7 = {}, (0, _defineProperty3.default)(_classNames7, "".concat(prefix, "--modal-close__icon"), true), (0, _defineProperty3.default)(_classNames7, closeIconClassName, closeIconClassName), _classNames7));
      return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
        className: headerClass
      }, other, {
        ref: forwardedRef
      }), label && /*#__PURE__*/_react.default.createElement("h2", {
        className: labelClass
      }, label), title && /*#__PURE__*/_react.default.createElement("h3", {
        className: titleClass
      }, title), children, /*#__PURE__*/_react.default.createElement("button", {
        onClick: this.handleCloseButtonClick,
        className: closeClass,
        title: iconDescription,
        "aria-label": iconDescription,
        type: "button"
      }, /*#__PURE__*/_react.default.createElement(_iconsReact.Close20, {
        className: closeIconClass
      })));
    }
  }]);
  return ModalHeader;
}(_react.Component);

exports.ModalHeader = ModalHeader;
(0, _defineProperty3.default)(ModalHeader, "propTypes", {
  /**
   * Provide an optional function to be called when the close button is
   * clicked
   */
  buttonOnClick: _propTypes.default.func,

  /**
   * Specify the content to be placed in the ModalHeader
   */
  children: _propTypes.default.node,

  /**
   * Specify an optional className to be applied to the modal header
   */
  className: _propTypes.default.string,

  /**
   * Specify an optional className to be applied to the modal close node
   */
  closeClassName: _propTypes.default.string,

  /**
   * Specify an optional className to be applied to the modal close icon node
   */
  closeIconClassName: _propTypes.default.string,

  /**
   * Provide an optional function to be called when the modal is closed
   */
  closeModal: _propTypes.default.func,

  /**
   * Specify a description for the close icon that can be read by screen
   * readers
   */
  iconDescription: _propTypes.default.string,

  /**
   * Specify an optional label to be displayed
   */
  label: _propTypes.default.node,

  /**
   * Specify an optional className to be applied to the modal header label
   */
  labelClassName: _propTypes.default.string,

  /**
   * Specify an optional title to be displayed
   */
  title: _propTypes.default.node,

  /**
   * Specify an optional className to be applied to the modal heading
   */
  titleClassName: _propTypes.default.string
});
(0, _defineProperty3.default)(ModalHeader, "contextType", _usePrefix.PrefixContext);
(0, _defineProperty3.default)(ModalHeader, "defaultProps", {
  iconDescription: 'Close',
  buttonOnClick: function buttonOnClick() {}
});

var ModalBody = /*#__PURE__*/_react.default.forwardRef(function ModalBody(props, ref) {
  var _classNames8;

  var className = props.className,
      children = props.children,
      hasForm = props.hasForm,
      hasScrollingContent = props.hasScrollingContent,
      preventCloseOnClickOutside = props.preventCloseOnClickOutside,
      other = (0, _objectWithoutProperties2.default)(props, _excluded3);
  var prefix = (0, _usePrefix.usePrefix)();
  var contentClass = (0, _classnames.default)((_classNames8 = {}, (0, _defineProperty3.default)(_classNames8, "".concat(prefix, "--modal-content"), true), (0, _defineProperty3.default)(_classNames8, "".concat(prefix, "--modal-content--with-form"), hasForm), (0, _defineProperty3.default)(_classNames8, "".concat(prefix, "--modal-scroll-content"), hasScrollingContent), (0, _defineProperty3.default)(_classNames8, className, className), _classNames8));
  var hasScrollingContentProps = hasScrollingContent ? {
    tabIndex: 0,
    role: 'region'
  } : {};
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
    className: contentClass
  }, hasScrollingContentProps, other, {
    ref: ref
  }), children), hasScrollingContent && /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefix, "--modal-content--overflow-indicator")
  }));
});

exports.ModalBody = ModalBody;
ModalBody.propTypes = (_ModalBody$propTypes = {}, (0, _defineProperty3.default)(_ModalBody$propTypes, 'aria-label', (0, _requiredIfGivenPropIsTruthy.default)('hasScrollingContent', _propTypes.default.string)), (0, _defineProperty3.default)(_ModalBody$propTypes, "children", _propTypes.default.node), (0, _defineProperty3.default)(_ModalBody$propTypes, "className", _propTypes.default.string), (0, _defineProperty3.default)(_ModalBody$propTypes, "hasForm", _propTypes.default.bool), (0, _defineProperty3.default)(_ModalBody$propTypes, "hasScrollingContent", _propTypes.default.bool), _ModalBody$propTypes);

var ModalFooter = /*#__PURE__*/function (_Component3) {
  (0, _inherits2.default)(ModalFooter, _Component3);

  var _super3 = _createSuper(ModalFooter);

  function ModalFooter() {
    var _this4;

    (0, _classCallCheck2.default)(this, ModalFooter);

    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    _this4 = _super3.call.apply(_super3, [this].concat(args));
    (0, _defineProperty3.default)((0, _assertThisInitialized2.default)(_this4), "handleRequestClose", function (evt) {
      _this4.props.closeModal(evt);

      _this4.props.onRequestClose(evt);
    });
    return _this4;
  }

  (0, _createClass2.default)(ModalFooter, [{
    key: "render",
    value: function render() {
      var _classNames9,
          _this5 = this;

      var _this$props4 = this.props,
          className = _this$props4.className,
          primaryClassName = _this$props4.primaryClassName,
          secondaryButtons = _this$props4.secondaryButtons,
          secondaryClassName = _this$props4.secondaryClassName,
          secondaryButtonText = _this$props4.secondaryButtonText,
          primaryButtonText = _this$props4.primaryButtonText,
          primaryButtonDisabled = _this$props4.primaryButtonDisabled,
          closeModal = _this$props4.closeModal,
          onRequestClose = _this$props4.onRequestClose,
          onRequestSubmit = _this$props4.onRequestSubmit,
          children = _this$props4.children,
          danger = _this$props4.danger,
          inputref = _this$props4.inputref,
          forwardedRef = _this$props4.forwardedRef,
          other = (0, _objectWithoutProperties2.default)(_this$props4, _excluded4);
      var prefix = this.context;
      var footerClass = (0, _classnames.default)((_classNames9 = {}, (0, _defineProperty3.default)(_classNames9, "".concat(prefix, "--modal-footer"), true), (0, _defineProperty3.default)(_classNames9, className, className), (0, _defineProperty3.default)(_classNames9, "".concat(prefix, "--modal-footer--three-button"), Array.isArray(secondaryButtons) && secondaryButtons.length === 2), _classNames9));
      var primaryClass = (0, _classnames.default)((0, _defineProperty3.default)({}, primaryClassName, primaryClassName));
      var secondaryClass = (0, _classnames.default)((0, _defineProperty3.default)({}, secondaryClassName, secondaryClassName));

      var SecondaryButtonSet = function SecondaryButtonSet() {
        if (Array.isArray(secondaryButtons) && secondaryButtons.length <= 2) {
          return secondaryButtons.map(function (_ref3, i) {
            var buttonText = _ref3.buttonText,
                onButtonClick = _ref3.onClick;
            return /*#__PURE__*/_react.default.createElement(_Button.default, {
              key: "".concat(buttonText, "-").concat(i),
              className: secondaryClass,
              kind: "secondary",
              onClick: onButtonClick || _this5.handleRequestClose
            }, buttonText);
          });
        }

        if (secondaryButtonText) {
          return /*#__PURE__*/_react.default.createElement(_Button.default, {
            className: secondaryClass,
            onClick: _this5.handleRequestClose,
            kind: "secondary"
          }, secondaryButtonText);
        }

        return null;
      };

      return /*#__PURE__*/_react.default.createElement(_ButtonSet.default, (0, _extends2.default)({
        className: footerClass
      }, other, {
        ref: forwardedRef
      }), /*#__PURE__*/_react.default.createElement(SecondaryButtonSet, null), primaryButtonText && /*#__PURE__*/_react.default.createElement(_Button.default, {
        onClick: onRequestSubmit,
        className: primaryClass,
        disabled: primaryButtonDisabled,
        kind: danger ? 'danger' : 'primary',
        ref: inputref
      }, primaryButtonText), children);
    }
  }]);
  return ModalFooter;
}(_react.Component);

exports.ModalFooter = ModalFooter;
(0, _defineProperty3.default)(ModalFooter, "propTypes", {
  /**
   * Pass in content that will be rendered in the Modal Footer
   */
  children: _propTypes.default.node,

  /**
   * Specify a custom className to be applied to the Modal Footer container
   */
  className: _propTypes.default.string,

  /**
   * Specify an optional function that is called whenever the modal is closed
   */
  closeModal: _propTypes.default.func,

  /**
   * Specify whether the primary button should be replaced with danger button.
   * Note that this prop is not applied if you render primary/danger button by yourself
   */
  danger: _propTypes.default.bool,

  /**
   * The `ref` callback for the primary button.
   */
  inputref: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.shape({
    current: _propTypes.default.any
  })]),

  /**
   * Specify an optional function for when the modal is requesting to be
   * closed
   */
  onRequestClose: _propTypes.default.func,

  /**
   * Specify an optional function for when the modal is requesting to be
   * submitted
   */
  onRequestSubmit: _propTypes.default.func,

  /**
   * Specify whether the primary button should be disabled
   */
  primaryButtonDisabled: _propTypes.default.bool,

  /**
   * Specify the text for the primary button
   */
  primaryButtonText: _propTypes.default.string,

  /**
   * Specify a custom className to be applied to the primary button
   */
  primaryClassName: _propTypes.default.string,

  /**
   * Specify the text for the secondary button
   */
  secondaryButtonText: _propTypes.default.string,

  /**
   * Specify an array of config objects for secondary buttons
   * (`Array<{
   *   buttonText: string,
   *   onClick: function,
   * }>`).
   */
  secondaryButtons: function secondaryButtons(props, propName, componentName) {
    if (props.secondaryButtons) {
      if (!Array.isArray(props.secondaryButtons) || props.secondaryButtons.length !== 2) {
        return new Error("".concat(propName, " needs to be an array of two button config objects"));
      }

      var shape = {
        buttonText: _propTypes.default.node,
        onClick: _propTypes.default.func
      };
      props[propName].forEach(function (secondaryButton) {
        _propTypes.default.checkPropTypes(shape, secondaryButton, propName, componentName);
      });
    }

    return null;
  },

  /**
   * Specify a custom className to be applied to the secondary button
   */
  secondaryClassName: _propTypes.default.string
});
(0, _defineProperty3.default)(ModalFooter, "defaultProps", {
  onRequestClose: function onRequestClose() {},
  onRequestSubmit: function onRequestSubmit() {}
});
(0, _defineProperty3.default)(ModalFooter, "contextType", _usePrefix.PrefixContext);