"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports._Default = exports.Tertiary = exports.Skeleton = exports.SetOfButtons = exports.Secondary = exports.Playground = exports.IconButton = exports.Ghost = exports.ExpressiveButtons = exports.Danger = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _addonKnobs = require("@storybook/addon-knobs");

var _carbonIcons = require("carbon-icons");

var _iconsReact = require("@carbon/icons-react");

var _Button = _interopRequireDefault(require("../Button"));

var _Button2 = _interopRequireDefault(require("../Button/Button.Skeleton"));

var _ButtonSet = _interopRequireDefault(require("../ButtonSet"));

var _Button3 = _interopRequireDefault(require("./Button.mdx"));

var _excluded = ["stacked"];
var icons = {
  None: 'None',
  'Add (Add16 from `@carbon/icons-react`)': 'Add16',
  'Add (Filled) (AddFilled16 from `@carbon/icons-react`)': 'AddFilled16',
  'Search (Search16 from `@carbon/icons-react`)': 'Search16',
  'PlayOutlineFilled16 (PlayOutlineFilled16 from `@carbon/icons-react`)': 'PlayOutlineFilled16',
  'PlayOutlineFilled32 (PlayOutlineFilled32 from `@carbon/icons-react`)': 'PlayOutlineFilled32'
};
var iconMap = {
  iconAddSolid: _carbonIcons.iconAddSolid,
  iconSearch: _carbonIcons.iconSearch,
  Add16: _iconsReact.Add16,
  AddFilled16: _iconsReact.AddFilled16,
  Search16: _iconsReact.Search16,
  PlayOutlineFilled16: _iconsReact.PlayOutlineFilled16,
  PlayOutlineFilled32: _iconsReact.PlayOutlineFilled32
};
var kinds = {
  'Primary button (primary)': 'primary',
  'Secondary button (secondary)': 'secondary',
  'Tertiary button (tertiary)': 'tertiary',
  'Danger button (danger)': 'danger',
  'Danger tertiary button (danger--tertiary)': 'danger--tertiary',
  'Danger ghost button (danger--ghost)': 'danger--ghost',
  'Ghost button (ghost)': 'ghost'
}; // V11: New size table
// const sizes = {
//   'Small  (sm)': 'sm',
//   'Medium (md)': 'md',
//   'Large  (lg)  - default': null,
//   'Extra Large (xl)': 'xl',
//   'Extra Extra Large (2xl)': '2xl',
// };

var sizes = {
  'Small  (sm)': 'sm',
  'Medium (md)': 'md',
  Default: null,
  'Large (lg)': 'lg',
  'Extra Large (xl)': 'xl'
};
var props = {
  regular: function regular() {
    var iconToUse = iconMap[(0, _addonKnobs.select)('Icon (icon)', icons, 'none')];
    return {
      className: 'some-class',
      isExpressive: (0, _addonKnobs.boolean)('Expressive', false),
      kind: (0, _addonKnobs.select)('Button kind (kind)', kinds, 'primary'),
      disabled: (0, _addonKnobs.boolean)('Disabled (disabled)', false),
      size: (0, _addonKnobs.select)('Button size (size)', sizes, 'default'),
      renderIcon: !iconToUse || iconToUse.svgData ? undefined : iconToUse,
      iconDescription: (0, _addonKnobs.text)('Icon description (iconDescription)', 'Button icon')
    };
  },
  iconOnly: function iconOnly() {
    var iconToUse;

    if (iconMap[(0, _addonKnobs.select)('Icon (icon)', icons, 'Add16')] == undefined) {
      iconToUse = _iconsReact.Add16;
    } else {
      iconToUse = iconMap[(0, _addonKnobs.select)('Icon (icon)', icons, 'Add16')];
    }

    return {
      className: 'some-class',
      isExpressive: (0, _addonKnobs.boolean)('Expressive', false),
      kind: (0, _addonKnobs.select)('Button kind (kind)', kinds, 'primary'),
      disabled: (0, _addonKnobs.boolean)('Disabled (disabled)', false),
      isSelected: (0, _addonKnobs.boolean)('Selected (isSelected)', false),
      size: (0, _addonKnobs.select)('Button size (size)', sizes, 'default'),
      renderIcon: !iconToUse || iconToUse.svgData ? undefined : iconToUse,
      iconDescription: (0, _addonKnobs.text)('Icon description (iconDescription)', 'Button icon'),
      tooltipPosition: (0, _addonKnobs.select)('Tooltip position (tooltipPosition)', ['top', 'right', 'bottom', 'left'], 'bottom'),
      tooltipAlignment: (0, _addonKnobs.select)('Tooltip alignment (tooltipAlignment)', ['start', 'center', 'end'], 'center')
    };
  },
  set: function set() {
    var iconToUse = iconMap[(0, _addonKnobs.select)('Icon (icon)', icons, 'none')];
    return {
      className: 'some-class',
      isExpressive: (0, _addonKnobs.boolean)('Expressive', false),
      disabled: (0, _addonKnobs.boolean)('Disabled (disabled)', false),
      size: (0, _addonKnobs.select)('Button size (size)', sizes, 'default'),
      renderIcon: !iconToUse || iconToUse.svgData ? undefined : iconToUse,
      iconDescription: (0, _addonKnobs.text)('Icon description (iconDescription)', 'Button icon'),
      stacked: (0, _addonKnobs.boolean)('Stack buttons vertically (stacked)', false)
    };
  }
};
var _default = {
  title: 'Components/Button',
  component: _Button.default,
  subcomponents: {
    ButtonSet: _ButtonSet.default,
    ButtonSkeleton: _Button2.default
  },
  decorators: [_addonKnobs.withKnobs],
  parameters: {
    docs: {
      page: _Button3.default
    }
  }
};
exports.default = _default;

var _Default = function _Default() {
  return /*#__PURE__*/_react.default.createElement(_Button.default, null, "Button");
};

exports._Default = _Default;
_Default.story = {
  name: 'Button'
};

var Secondary = function Secondary() {
  return /*#__PURE__*/_react.default.createElement(_Button.default, {
    kind: "secondary"
  }, "Button");
};

exports.Secondary = Secondary;

var Tertiary = function Tertiary() {
  return /*#__PURE__*/_react.default.createElement(_Button.default, {
    kind: "tertiary"
  }, "Button");
};

exports.Tertiary = Tertiary;

var Danger = function Danger() {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_Button.default, {
    kind: "danger"
  }, "Button"), "\xA0", /*#__PURE__*/_react.default.createElement(_Button.default, {
    kind: "danger--tertiary"
  }, "Tertiary Danger Button"), "\xA0", /*#__PURE__*/_react.default.createElement(_Button.default, {
    kind: "danger--ghost"
  }, "Ghost Danger Button"));
};

exports.Danger = Danger;

var Ghost = function Ghost() {
  return /*#__PURE__*/_react.default.createElement(_Button.default, {
    kind: "ghost"
  }, "Button");
};

exports.Ghost = Ghost;

var Playground = function Playground() {
  var regularProps = props.regular();
  var iconOnly = props.iconOnly();

  var _props$set = props.set(),
      stacked = _props$set.stacked,
      buttonProps = (0, _objectWithoutProperties2.default)(_props$set, _excluded);

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      display: 'flex',
      alignItems: 'center',
      flexWrap: 'wrap'
    }
  }, /*#__PURE__*/_react.default.createElement(_Button.default, regularProps, "Buttons"), "\xA0", !regularProps.kind.includes('danger') && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_Button.default, (0, _extends2.default)({
    hasIconOnly: true
  }, iconOnly)), "\xA0", /*#__PURE__*/_react.default.createElement(_Button.default, (0, _extends2.default)({
    hasIconOnly: true
  }, iconOnly, {
    kind: "ghost"
  })))), /*#__PURE__*/_react.default.createElement("div", {
    style: {
      marginTop: '1rem'
    }
  }, /*#__PURE__*/_react.default.createElement(_ButtonSet.default, {
    stacked: stacked
  }, /*#__PURE__*/_react.default.createElement(_Button.default, (0, _extends2.default)({
    kind: "secondary"
  }, buttonProps), "Secondary button"), /*#__PURE__*/_react.default.createElement(_Button.default, (0, _extends2.default)({
    kind: "primary"
  }, buttonProps), "Primary button"))));
};

exports.Playground = Playground;

var IconButton = function IconButton() {
  return /*#__PURE__*/_react.default.createElement(_Button.default, {
    renderIcon: _iconsReact.Add16,
    iconDescription: "Icon Description",
    hasIconOnly: true
  });
};

exports.IconButton = IconButton;
IconButton.story = {
  name: 'Icon Button'
};

var SetOfButtons = function SetOfButtons() {
  return /*#__PURE__*/_react.default.createElement(_ButtonSet.default, null, /*#__PURE__*/_react.default.createElement(_Button.default, {
    kind: "secondary"
  }, "Secondary button"), /*#__PURE__*/_react.default.createElement(_Button.default, {
    kind: "primary"
  }, "Primary button"));
};

exports.SetOfButtons = SetOfButtons;

var ExpressiveButtons = function ExpressiveButtons() {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      margin: '1rem'
    }
  }, /*#__PURE__*/_react.default.createElement(_Button.default, {
    isExpressive: true,
    size: "default"
  }, "Button")), /*#__PURE__*/_react.default.createElement("div", {
    style: {
      margin: '1rem'
    }
  }, /*#__PURE__*/_react.default.createElement(_Button.default, {
    isExpressive: true,
    size: "lg"
  }, "Button")), /*#__PURE__*/_react.default.createElement("div", {
    style: {
      margin: '1rem'
    }
  }, /*#__PURE__*/_react.default.createElement(_Button.default, {
    isExpressive: true,
    size: "xl"
  }, "Button")), /*#__PURE__*/_react.default.createElement("div", {
    style: {
      margin: '1rem'
    }
  }, /*#__PURE__*/_react.default.createElement(_Button.default, {
    isExpressive: true,
    size: "default",
    renderIcon: _iconsReact.Add16
  }, "Button")), /*#__PURE__*/_react.default.createElement("div", {
    style: {
      margin: '1rem'
    }
  }, /*#__PURE__*/_react.default.createElement(_Button.default, {
    isExpressive: true,
    renderIcon: _iconsReact.Add16,
    hasIconOnly: true,
    iconDescription: "Icon description"
  })), /*#__PURE__*/_react.default.createElement("div", {
    style: {
      marginTop: '1rem'
    }
  }, /*#__PURE__*/_react.default.createElement(_ButtonSet.default, null, /*#__PURE__*/_react.default.createElement(_Button.default, {
    kind: "secondary",
    isExpressive: true
  }, "Secondary button"), /*#__PURE__*/_react.default.createElement(_Button.default, {
    kind: "primary",
    isExpressive: true
  }, "Primary button"))));
};

exports.ExpressiveButtons = ExpressiveButtons;

var Skeleton = function Skeleton() {
  return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_Button2.default, {
    size: "xl"
  }), "\xA0", /*#__PURE__*/_react.default.createElement(_Button2.default, {
    size: "lg"
  }), "\xA0", /*#__PURE__*/_react.default.createElement(_Button2.default, null), "\xA0", /*#__PURE__*/_react.default.createElement(_Button2.default, {
    size: "md"
  }), "\xA0", /*#__PURE__*/_react.default.createElement(_Button2.default, {
    small: true
  }));
};

exports.Skeleton = Skeleton;