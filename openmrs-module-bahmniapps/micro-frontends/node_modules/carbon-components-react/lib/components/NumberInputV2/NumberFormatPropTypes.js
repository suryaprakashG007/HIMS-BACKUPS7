"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NumberFormatOptionsPropType = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

/**
 * Copyright IBM Corp. 2025
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var NumberFormatOptionsPropType = _propTypes.default.shape({
  // Locale Options
  localeMatcher: _propTypes.default.oneOf(['best fit', 'lookup']),
  // Style Options
  style: _propTypes.default.oneOf(['decimal', 'currency', 'percent', 'unit']),
  currency: _propTypes.default.string,
  // e.g., 'USD'
  currencyDisplay: _propTypes.default.oneOf(['symbol', 'narrowSymbol', 'code', 'name']),
  currencySign: _propTypes.default.oneOf(['standard', 'accounting']),
  unit: _propTypes.default.string,
  // e.g., 'liter', 'mile-per-hour'
  unitDisplay: _propTypes.default.oneOf(['short', 'narrow', 'long']),
  notation: _propTypes.default.oneOf(['standard', 'scientific', 'engineering', 'compact']),
  compactDisplay: _propTypes.default.oneOf(['short', 'long']),
  signDisplay: _propTypes.default.oneOf(['auto', 'never', 'always', 'exceptZero']),
  // Digit Options
  minimumIntegerDigits: _propTypes.default.number,
  minimumFractionDigits: _propTypes.default.number,
  maximumFractionDigits: _propTypes.default.number,
  minimumSignificantDigits: _propTypes.default.number,
  maximumSignificantDigits: _propTypes.default.number,
  useGrouping: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.oneOf(['always', 'auto', 'min2'])]),
  // Misc/Other Options
  numberingSystem: _propTypes.default.string,
  // e.g., 'latn', 'arab'
  roundingIncrement: _propTypes.default.number,
  roundingMode: _propTypes.default.oneOf(['ceil', 'floor', 'expand', 'trunc', 'halfCeil', 'halfFloor', 'halfExpand', 'halfTrunc', 'halfEven']),
  trailingZeroDisplay: _propTypes.default.oneOf(['auto', 'stripIfInteger'])
});

exports.NumberFormatOptionsPropType = NumberFormatOptionsPropType;