"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Example = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

require("./story.scss");

var _react = _interopRequireDefault(require("react"));

var _iconsReact = require("@carbon/icons-react");

var _ = _interopRequireWildcard(require("../.."));

var _shared = require("../shared");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var _default = {
  title: 'Components/DataTable/Dynamic',
  component: _.default,
  argTypes: {
    size: {
      options: ['xs', 'sm', 'md', 'lg', 'xl'],
      control: {
        type: 'select'
      }
    },
    useZebraStyles: {
      control: {
        type: 'boolean'
      }
    },
    radio: {
      control: {
        type: 'boolean'
      }
    },
    isSortable: {
      control: {
        type: 'boolean'
      }
    }
  },
  args: {
    size: 'lg',
    useZebraStyles: false
  }
};
exports.default = _default;

var Example = function Example(args) {
  var insertInRandomPosition = function insertInRandomPosition(array, element) {
    var index = Math.floor(Math.random() * (array.length + 1));
    return [].concat((0, _toConsumableArray2.default)(array.slice(0, index)), [element], (0, _toConsumableArray2.default)(array.slice(index)));
  };

  var DynamicRows = /*#__PURE__*/function (_React$Component) {
    (0, _inherits2.default)(DynamicRows, _React$Component);

    var _super = _createSuper(DynamicRows);

    function DynamicRows() {
      var _this;

      (0, _classCallCheck2.default)(this, DynamicRows);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _super.call.apply(_super, [this].concat(args));
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
        rows: _shared.rows,
        headers: _shared.headers,
        id: 0
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleOnHeaderAdd", function () {
        var length = _this.state.headers.length;
        var header = {
          key: "header_".concat(length),
          header: "Header ".concat(length)
        };

        _this.setState(function (state) {
          var rows = state.rows.map(function (row) {
            return _objectSpread(_objectSpread({}, row), {}, (0, _defineProperty2.default)({}, header.key, header.header));
          });
          return {
            rows: rows,
            headers: state.headers.concat(header)
          };
        });
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleOnRowAdd", function () {
        _this.setState(function (state) {
          var _id = state.id,
              rows = state.rows;
          var id = _id + 1;
          var row = {
            id: '' + id,
            name: "New Row ".concat(id),
            protocol: 'HTTP',
            port: id * 100,
            rule: id % 2 === 0 ? 'Round robin' : 'DNS delegation',
            attached_groups: "Row ".concat(id, "'s VM Groups"),
            status: 'Starting'
          };
          state.headers.filter(function (header) {
            return row[header.key] === undefined;
          }).forEach(function (header) {
            row[header.key] = header.header;
          });
          return {
            id: id,
            rows: insertInRandomPosition(rows, row)
          };
        });
      });
      return _this;
    }

    (0, _createClass2.default)(DynamicRows, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return /*#__PURE__*/_react.default.createElement(_.default, (0, _extends2.default)({}, args, {
          rows: this.state.rows,
          headers: this.state.headers,
          render: function render(_ref) {
            var rows = _ref.rows,
                headers = _ref.headers,
                getHeaderProps = _ref.getHeaderProps,
                getSelectionProps = _ref.getSelectionProps,
                getToolbarProps = _ref.getToolbarProps,
                getBatchActionProps = _ref.getBatchActionProps,
                getRowProps = _ref.getRowProps,
                onInputChange = _ref.onInputChange,
                selectedRows = _ref.selectedRows,
                getTableProps = _ref.getTableProps,
                getTableContainerProps = _ref.getTableContainerProps;
            return /*#__PURE__*/_react.default.createElement(_.TableContainer, (0, _extends2.default)({
              title: "DataTable",
              description: "Use the toolbar menu to add rows and headers"
            }, getTableContainerProps()), /*#__PURE__*/_react.default.createElement(_.TableToolbar, getToolbarProps(), /*#__PURE__*/_react.default.createElement(_.TableBatchActions, getBatchActionProps(), /*#__PURE__*/_react.default.createElement(_.TableBatchAction, {
              renderIcon: _iconsReact.Delete16,
              iconDescription: "Delete the selected rows",
              onClick: (0, _shared.batchActionClick)(selectedRows)
            }, "Delete"), /*#__PURE__*/_react.default.createElement(_.TableBatchAction, {
              renderIcon: _iconsReact.Save16,
              iconDescription: "Save the selected rows",
              onClick: (0, _shared.batchActionClick)(selectedRows)
            }, "Save"), /*#__PURE__*/_react.default.createElement(_.TableBatchAction, {
              renderIcon: _iconsReact.Download16,
              iconDescription: "Download the selected rows",
              onClick: (0, _shared.batchActionClick)(selectedRows)
            }, "Download")), /*#__PURE__*/_react.default.createElement(_.TableToolbarContent, null, /*#__PURE__*/_react.default.createElement(_.TableToolbarSearch, {
              onChange: onInputChange
            }), /*#__PURE__*/_react.default.createElement(_.TableToolbarMenu, null, /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
              onClick: _this2.handleOnRowAdd
            }, "Add row"), /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
              onClick: _this2.handleOnHeaderAdd
            }, "Add header")))), /*#__PURE__*/_react.default.createElement(_.Table, getTableProps(), /*#__PURE__*/_react.default.createElement(_.TableHead, null, /*#__PURE__*/_react.default.createElement(_.TableRow, null, /*#__PURE__*/_react.default.createElement(_.TableExpandHeader, null), /*#__PURE__*/_react.default.createElement(_.TableSelectAll, getSelectionProps()), headers.map(function (header, i) {
              return /*#__PURE__*/_react.default.createElement(_.TableHeader, (0, _extends2.default)({
                key: i
              }, getHeaderProps({
                header: header
              })), header.header);
            }))), /*#__PURE__*/_react.default.createElement(_.TableBody, null, rows.map(function (row) {
              return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {
                key: row.id
              }, /*#__PURE__*/_react.default.createElement(_.TableExpandRow, getRowProps({
                row: row
              }), /*#__PURE__*/_react.default.createElement(_.TableSelectRow, getSelectionProps({
                row: row
              })), row.cells.map(function (cell) {
                return /*#__PURE__*/_react.default.createElement(_.TableCell, {
                  key: cell.id
                }, cell.value);
              })), /*#__PURE__*/_react.default.createElement(_.TableExpandedRow, {
                colSpan: headers.length + 3,
                className: "demo-expanded-td"
              }, /*#__PURE__*/_react.default.createElement("h6", null, "Expandable row content"), /*#__PURE__*/_react.default.createElement("div", null, "Description here")));
            }))));
          }
        }));
      }
    }]);
    return DynamicRows;
  }(_react.default.Component);

  return /*#__PURE__*/_react.default.createElement(DynamicRows, null);
};

exports.Example = Example;