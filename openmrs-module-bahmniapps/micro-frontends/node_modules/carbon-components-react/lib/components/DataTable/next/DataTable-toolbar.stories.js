"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.WithOverflowMenu = exports.SmallPersistentToolbar = exports.PersistentToolbar = exports.DefaultToolbar = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _addonActions = require("@storybook/addon-actions");

var _react = _interopRequireDefault(require("react"));

var _Button = _interopRequireDefault(require("../../Button"));

var _OverflowMenu = _interopRequireDefault(require("../../OverflowMenu"));

var _OverflowMenuItem = _interopRequireDefault(require("../../OverflowMenuItem"));

var _ = _interopRequireWildcard(require(".."));

var _DataTable = _interopRequireDefault(require("../DataTable.mdx"));

var _shared = require("./shared");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Copyright IBM Corp. 2016, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var _default = {
  title: 'Components/DataTable/Toolbar',
  component: _.default,
  subcomponents: {
    TableContainer: _.TableContainer,
    Table: _.Table,
    TableHead: _.TableHead,
    TableRow: _.TableRow,
    TableHeader: _.TableHeader,
    TableBody: _.TableBody,
    TableCell: _.TableCell
  },
  argTypes: {
    size: {
      options: ['xs', 'sm', 'md', 'lg', 'xl'],
      control: {
        type: 'select'
      }
    },
    useZebraStyles: {
      control: {
        type: 'boolean'
      }
    },
    radio: {
      control: {
        type: 'boolean'
      }
    },
    isSortable: {
      control: {
        type: 'boolean'
      }
    },
    persistent: {
      control: {
        type: 'boolean'
      }
    }
  },
  args: {
    size: 'lg',
    useZebraStyles: false,
    radio: false,
    isSortable: false,
    persistent: false
  },
  parameters: {
    docs: {
      page: _DataTable.default
    }
  }
};
exports.default = _default;

var DefaultToolbar = function DefaultToolbar(args) {
  return /*#__PURE__*/_react.default.createElement(_.default, (0, _extends2.default)({
    rows: _shared.rows,
    headers: _shared.headers
  }, args), function (_ref) {
    var rows = _ref.rows,
        headers = _ref.headers,
        getHeaderProps = _ref.getHeaderProps,
        getRowProps = _ref.getRowProps,
        getTableProps = _ref.getTableProps,
        getToolbarProps = _ref.getToolbarProps,
        onInputChange = _ref.onInputChange,
        getTableContainerProps = _ref.getTableContainerProps;
    return /*#__PURE__*/_react.default.createElement(_.TableContainer, (0, _extends2.default)({
      title: "DataTable",
      description: "With toolbar"
    }, getTableContainerProps()), /*#__PURE__*/_react.default.createElement(_.TableToolbar, (0, _extends2.default)({}, getToolbarProps(), {
      "aria-label": "data table toolbar"
    }), /*#__PURE__*/_react.default.createElement(_.TableToolbarContent, null, /*#__PURE__*/_react.default.createElement(_.TableToolbarSearch, (0, _extends2.default)({
      onChange: onInputChange
    }, args)), /*#__PURE__*/_react.default.createElement(_.TableToolbarMenu, {
      light: true
    }, /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
      onClick: (0, _addonActions.action)('Action 1 Click')
    }, "Action 1"), /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
      onClick: (0, _addonActions.action)('Action 2 Click')
    }, "Action 2"), /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
      onClick: (0, _addonActions.action)('Action 3 Click')
    }, "Action 3")), /*#__PURE__*/_react.default.createElement(_Button.default, {
      onClick: (0, _addonActions.action)('Button click')
    }, "Primary Button"))), /*#__PURE__*/_react.default.createElement(_.Table, getTableProps(), /*#__PURE__*/_react.default.createElement(_.TableHead, null, /*#__PURE__*/_react.default.createElement(_.TableRow, null, headers.map(function (header) {
      return /*#__PURE__*/_react.default.createElement(_.TableHeader, (0, _extends2.default)({
        key: header.key
      }, getHeaderProps({
        header: header
      })), header.header);
    }))), /*#__PURE__*/_react.default.createElement(_.TableBody, null, rows.map(function (row) {
      return /*#__PURE__*/_react.default.createElement(_.TableRow, (0, _extends2.default)({
        key: row.id
      }, getRowProps({
        row: row
      })), row.cells.map(function (cell) {
        return /*#__PURE__*/_react.default.createElement(_.TableCell, {
          key: cell.id
        }, cell.value);
      }));
    }))));
  });
};

exports.DefaultToolbar = DefaultToolbar;

var PersistentToolbar = function PersistentToolbar() {
  return /*#__PURE__*/_react.default.createElement(_.default, {
    rows: _shared.rows,
    headers: _shared.headers
  }, function (_ref2) {
    var rows = _ref2.rows,
        headers = _ref2.headers,
        getHeaderProps = _ref2.getHeaderProps,
        getRowProps = _ref2.getRowProps,
        getTableProps = _ref2.getTableProps,
        getToolbarProps = _ref2.getToolbarProps,
        onInputChange = _ref2.onInputChange,
        getTableContainerProps = _ref2.getTableContainerProps;
    return /*#__PURE__*/_react.default.createElement(_.TableContainer, (0, _extends2.default)({
      title: "DataTable",
      description: "With toolbar"
    }, getTableContainerProps()), /*#__PURE__*/_react.default.createElement(_.TableToolbar, (0, _extends2.default)({}, getToolbarProps(), {
      "aria-label": "data table toolbar"
    }), /*#__PURE__*/_react.default.createElement(_.TableToolbarContent, null, /*#__PURE__*/_react.default.createElement(_.TableToolbarSearch, {
      onChange: onInputChange,
      persistent: true
    }), /*#__PURE__*/_react.default.createElement(_.TableToolbarMenu, {
      light: true
    }, /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
      onClick: (0, _addonActions.action)('Action 1 Click')
    }, "Action 1"), /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
      onClick: (0, _addonActions.action)('Action 2 Click')
    }, "Action 2"), /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
      onClick: (0, _addonActions.action)('Action 3 Click')
    }, "Action 3")), /*#__PURE__*/_react.default.createElement(_Button.default, {
      onClick: (0, _addonActions.action)('Button click')
    }, "Primary Button"))), /*#__PURE__*/_react.default.createElement(_.Table, getTableProps(), /*#__PURE__*/_react.default.createElement(_.TableHead, null, /*#__PURE__*/_react.default.createElement(_.TableRow, null, headers.map(function (header) {
      return /*#__PURE__*/_react.default.createElement(_.TableHeader, (0, _extends2.default)({
        key: header.key
      }, getHeaderProps({
        header: header
      })), header.header);
    }))), /*#__PURE__*/_react.default.createElement(_.TableBody, null, rows.map(function (row) {
      return /*#__PURE__*/_react.default.createElement(_.TableRow, (0, _extends2.default)({
        key: row.id
      }, getRowProps({
        row: row
      })), row.cells.map(function (cell) {
        return /*#__PURE__*/_react.default.createElement(_.TableCell, {
          key: cell.id
        }, cell.value);
      }));
    }))));
  });
};

exports.PersistentToolbar = PersistentToolbar;

var SmallPersistentToolbar = function SmallPersistentToolbar() {
  return /*#__PURE__*/_react.default.createElement(_.default, {
    rows: _shared.rows,
    headers: _shared.headers
  }, function (_ref3) {
    var rows = _ref3.rows,
        headers = _ref3.headers,
        getHeaderProps = _ref3.getHeaderProps,
        getRowProps = _ref3.getRowProps,
        getTableProps = _ref3.getTableProps,
        getToolbarProps = _ref3.getToolbarProps,
        onInputChange = _ref3.onInputChange,
        getTableContainerProps = _ref3.getTableContainerProps;
    return /*#__PURE__*/_react.default.createElement(_.TableContainer, (0, _extends2.default)({
      title: "DataTable",
      description: "With toolbar"
    }, getTableContainerProps()), /*#__PURE__*/_react.default.createElement(_.TableToolbar, (0, _extends2.default)({}, getToolbarProps(), {
      "aria-label": "data table toolbar",
      size: "sm"
    }), /*#__PURE__*/_react.default.createElement(_.TableToolbarContent, null, /*#__PURE__*/_react.default.createElement(_.TableToolbarSearch, {
      onChange: onInputChange,
      persistent: true,
      size: "sm"
    }), /*#__PURE__*/_react.default.createElement(_.TableToolbarMenu, {
      light: true,
      size: "sm"
    }, /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
      onClick: (0, _addonActions.action)('Action 1 Click')
    }, "Action 1"), /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
      onClick: (0, _addonActions.action)('Action 2 Click')
    }, "Action 2"), /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
      onClick: (0, _addonActions.action)('Action 3 Click')
    }, "Action 3")), /*#__PURE__*/_react.default.createElement(_Button.default, {
      onClick: (0, _addonActions.action)('Button click')
    }, "Primary Button"))), /*#__PURE__*/_react.default.createElement(_.Table, (0, _extends2.default)({}, getTableProps(), {
      size: "sm"
    }), /*#__PURE__*/_react.default.createElement(_.TableHead, null, /*#__PURE__*/_react.default.createElement(_.TableRow, null, headers.map(function (header) {
      return /*#__PURE__*/_react.default.createElement(_.TableHeader, (0, _extends2.default)({
        key: header.key
      }, getHeaderProps({
        header: header
      })), header.header);
    }))), /*#__PURE__*/_react.default.createElement(_.TableBody, null, rows.map(function (row) {
      return /*#__PURE__*/_react.default.createElement(_.TableRow, (0, _extends2.default)({
        key: row.id
      }, getRowProps({
        row: row
      })), row.cells.map(function (cell) {
        return /*#__PURE__*/_react.default.createElement(_.TableCell, {
          key: cell.id
        }, cell.value);
      }));
    }))));
  });
};

exports.SmallPersistentToolbar = SmallPersistentToolbar;

var WithOverflowMenu = function WithOverflowMenu() {
  return /*#__PURE__*/_react.default.createElement(_.default, {
    rows: _shared.rows,
    headers: _shared.headers
  }, function (_ref4) {
    var rows = _ref4.rows,
        headers = _ref4.headers,
        getHeaderProps = _ref4.getHeaderProps,
        getRowProps = _ref4.getRowProps,
        getTableProps = _ref4.getTableProps,
        getToolbarProps = _ref4.getToolbarProps,
        onInputChange = _ref4.onInputChange;
    return /*#__PURE__*/_react.default.createElement(_.TableContainer, {
      title: "DataTable",
      description: "With overflow menu"
    }, /*#__PURE__*/_react.default.createElement(_.TableToolbar, (0, _extends2.default)({}, getToolbarProps(), {
      "aria-label": "data table toolbar"
    }), /*#__PURE__*/_react.default.createElement(_.TableToolbarContent, null, /*#__PURE__*/_react.default.createElement(_.TableToolbarSearch, {
      onChange: onInputChange
    }), /*#__PURE__*/_react.default.createElement(_.TableToolbarMenu, {
      light: true
    }, /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
      onClick: (0, _addonActions.action)('Action 1 Click')
    }, "Action 1"), /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
      onClick: (0, _addonActions.action)('Action 2 Click')
    }, "Action 2"), /*#__PURE__*/_react.default.createElement(_.TableToolbarAction, {
      onClick: (0, _addonActions.action)('Action 3 Click')
    }, "Action 3")), /*#__PURE__*/_react.default.createElement(_Button.default, {
      onClick: (0, _addonActions.action)('Button click')
    }, "Primary Button"))), /*#__PURE__*/_react.default.createElement(_.Table, getTableProps(), /*#__PURE__*/_react.default.createElement(_.TableHead, null, /*#__PURE__*/_react.default.createElement(_.TableRow, null, headers.map(function (header) {
      return /*#__PURE__*/_react.default.createElement(_.TableHeader, (0, _extends2.default)({
        key: header.key
      }, getHeaderProps({
        header: header
      })), header.header);
    }), /*#__PURE__*/_react.default.createElement(_.TableHeader, null))), /*#__PURE__*/_react.default.createElement(_.TableBody, null, rows.map(function (row) {
      return /*#__PURE__*/_react.default.createElement(_.TableRow, (0, _extends2.default)({
        key: row.id
      }, getRowProps({
        row: row
      })), row.cells.map(function (cell) {
        return /*#__PURE__*/_react.default.createElement(_.TableCell, {
          key: cell.id
        }, cell.value);
      }), /*#__PURE__*/_react.default.createElement(_.TableCell, {
        className: "bx--table-column-menu"
      }, /*#__PURE__*/_react.default.createElement(_OverflowMenu.default, {
        size: "sm",
        light: true,
        flipped: true
      }, /*#__PURE__*/_react.default.createElement(_OverflowMenuItem.default, null, "Action 1"), /*#__PURE__*/_react.default.createElement(_OverflowMenuItem.default, null, "Action 2"), /*#__PURE__*/_react.default.createElement(_OverflowMenuItem.default, null, "Action 3"))));
    }))));
  });
};

exports.WithOverflowMenu = WithOverflowMenu;