"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.WithIcons = exports.WithControlledExpansion = exports.Default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _iconsReact = require("@carbon/icons-react");

var _Notification = require("../../Notification");

var _ = _interopRequireWildcard(require("../"));

require("./story.scss");

var _excluded = ["children", "renderIcon", "isExpanded"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var props = function props() {
  return {
    active: '5',
    hideLabel: false,
    label: 'Tree view',
    multiselect: false,
    selected: ['5'],
    size: 'default'
  };
};

var nodes = [{
  id: '1',
  value: 'Artificial intelligence',
  label: /*#__PURE__*/_react.default.createElement("span", null, "Artificial intelligence"),
  renderIcon: _iconsReact.Document16
}, {
  id: '2',
  value: 'Blockchain',
  label: 'Blockchain',
  renderIcon: _iconsReact.Document16
}, {
  id: '3',
  value: 'Business automation',
  label: 'Business automation',
  renderIcon: _iconsReact.Folder16,
  children: [{
    id: '3-1',
    value: 'Business process automation',
    label: 'Business process automation',
    renderIcon: _iconsReact.Document16
  }, {
    id: '3-2',
    value: 'Business process mapping',
    label: 'Business process mapping',
    renderIcon: _iconsReact.Document16
  }]
}, {
  id: '4',
  value: 'Business operations',
  label: 'Business operations',
  renderIcon: _iconsReact.Document16
}, {
  id: '5',
  value: 'Cloud computing',
  label: 'Cloud computing',
  isExpanded: true,
  renderIcon: _iconsReact.Folder16,
  children: [{
    id: '5-1',
    value: 'Containers',
    label: 'Containers',
    renderIcon: _iconsReact.Document16
  }, {
    id: '5-2',
    value: 'Databases',
    label: 'Databases',
    renderIcon: _iconsReact.Document16
  }, {
    id: '5-3',
    value: 'DevOps',
    label: 'DevOps',
    isExpanded: true,
    renderIcon: _iconsReact.Folder16,
    children: [{
      id: '5-4',
      value: 'Solutions',
      label: 'Solutions',
      renderIcon: _iconsReact.Document16
    }, {
      id: '5-5',
      value: 'Case studies',
      label: 'Case studies',
      isExpanded: true,
      renderIcon: _iconsReact.Folder16,
      children: [{
        id: '5-6',
        value: 'Resources',
        label: 'Resources',
        renderIcon: _iconsReact.Document16
      }]
    }]
  }]
}, {
  id: '6',
  value: 'Data & Analytics',
  label: 'Data & Analytics',
  renderIcon: _iconsReact.Folder16,
  children: [{
    id: '6-1',
    value: 'Big data',
    label: 'Big data',
    renderIcon: _iconsReact.Document16
  }, {
    id: '6-2',
    value: 'Business intelligence',
    label: 'Business intelligence',
    renderIcon: _iconsReact.Document16
  }]
}, {
  id: '7',
  value: 'IT infrastructure',
  label: 'IT infrastructure',
  isExpanded: true,
  disabled: true,
  renderIcon: _iconsReact.Folder16,
  children: [{
    id: '7-1',
    value: 'Data storage',
    label: 'Data storage',
    renderIcon: _iconsReact.Document16
  }, {
    id: '7-2',
    value: 'Enterprise servers',
    label: 'Enterprise servers',
    renderIcon: _iconsReact.Document16
  }, {
    id: '8',
    value: 'Hybrid cloud infrastructure',
    label: 'Hybrid cloud infrastructure',
    isExpanded: true,
    renderIcon: _iconsReact.Folder16,
    children: [{
      id: '8-1',
      value: 'Insights',
      label: 'Insights',
      renderIcon: _iconsReact.Document16
    }, {
      id: '8-2',
      value: 'Benefits',
      label: 'Benefits',
      renderIcon: _iconsReact.Document16
    }]
  }]
}];

function renderTree(_ref) {
  var nodes = _ref.nodes,
      expanded = _ref.expanded,
      _ref$withIcons = _ref.withIcons,
      withIcons = _ref$withIcons === void 0 ? false : _ref$withIcons;

  if (!nodes) {
    return;
  }

  return nodes.map(function (_ref2) {
    var children = _ref2.children,
        renderIcon = _ref2.renderIcon,
        isExpanded = _ref2.isExpanded,
        nodeProps = (0, _objectWithoutProperties2.default)(_ref2, _excluded);
    return /*#__PURE__*/_react.default.createElement(_.TreeNode, (0, _extends2.default)({
      key: nodeProps.id,
      renderIcon: withIcons ? renderIcon : null,
      isExpanded: expanded !== null && expanded !== void 0 ? expanded : isExpanded
    }, nodeProps), renderTree({
      nodes: children,
      expanded: expanded,
      withIcons: withIcons
    }));
  });
}

var _default = {
  title: 'Experimental/unstable_TreeView',
  component: _.default,
  argTypes: {
    size: {
      options: ['xs', 'sm'],
      control: {
        type: 'select'
      }
    }
  },
  args: {
    size: 'sm'
  }
};
exports.default = _default;

var Default = function Default(args) {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_Notification.InlineNotification, {
    kind: "info"
  }, "Experimental component: An accessibility review of this component is in progress"), /*#__PURE__*/_react.default.createElement(_.default, (0, _extends2.default)({}, props(), args), renderTree({
    nodes: nodes
  })));
};

exports.Default = Default;
Default.storyName = 'default';
Default.parameters = {
  info: {
    text: ""
  }
};

var WithIcons = function WithIcons(args) {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_Notification.InlineNotification, {
    kind: "info",
    title: "Experimental component",
    subtitle: "An accessibility review of this component is in progress"
  }), /*#__PURE__*/_react.default.createElement(_.default, (0, _extends2.default)({}, props(), args), renderTree({
    nodes: nodes,
    withIcons: true
  })));
};

exports.WithIcons = WithIcons;
WithIcons.storyName = 'with icons';

var WithControlledExpansion = function WithControlledExpansion(args) {
  var _useState = (0, _react.useState)(undefined),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      expanded = _useState2[0],
      setExpanded = _useState2[1];

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_Notification.InlineNotification, {
    kind: "info",
    title: "Experimental component",
    subtitle: "An accessibility review of this component is in progress"
  }), /*#__PURE__*/_react.default.createElement("div", {
    style: {
      marginBottom: '1rem'
    }
  }, /*#__PURE__*/_react.default.createElement("button", {
    type: "button",
    onClick: function onClick() {
      return setExpanded(true);
    }
  }, "expand all"), /*#__PURE__*/_react.default.createElement("button", {
    type: "button",
    onClick: function onClick() {
      return setExpanded(false);
    }
  }, "collapse all")), /*#__PURE__*/_react.default.createElement(_.default, (0, _extends2.default)({}, props(), args), renderTree({
    nodes: nodes,
    expanded: expanded
  })));
};

exports.WithControlledExpansion = WithControlledExpansion;