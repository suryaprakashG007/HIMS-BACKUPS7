import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _extends from "@babel/runtime/helpers/extends";

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import React from 'react';
import classNames from 'classnames';
import { action } from '@storybook/addon-actions';
import { withKnobs, boolean, text } from '@storybook/addon-knobs';
import Checkbox from '../Checkbox';
import Button from '../../components/Button';
import CheckboxSkeleton from '../Checkbox/Checkbox.Skeleton';
import { settings } from 'carbon-components';
import mdx from './Checkbox.mdx';
import { FeatureFlags } from '../FeatureFlags';
var prefix = settings.prefix;
export default {
  title: 'Components/Checkbox',
  component: Checkbox,
  subcomponents: {
    CheckboxSkeleton: CheckboxSkeleton
  },
  decorators: [withKnobs],
  parameters: {
    docs: {
      page: mdx
    }
  }
};
export var CheckboxNativeValidation = function CheckboxNativeValidation() {
  function onSubmit(e) {
    e.preventDefault();
    var cb = e.target.querySelector('input[type=checkbox]');

    if (cb.checked === false) {
      cb.setCustomValidity('Privacy policy has to be accepted.');
      cb.reportValidity();
      return;
    }

    alert('submitted');
  }

  function onChange(e) {
    e.target.setCustomValidity('');
  }

  return /*#__PURE__*/React.createElement("form", {
    style: {
      margin: '2em'
    },
    onSubmit: onSubmit,
    onChange: onChange
  }, /*#__PURE__*/React.createElement("legend", {
    className: "".concat(prefix, "--label")
  }, "Validation example"), /*#__PURE__*/React.createElement(Checkbox, {
    id: "cb",
    labelText: "Accept privacy policy"
  }), /*#__PURE__*/React.createElement(Button, {
    type: "submit"
  }, "Submit"));
};
export var CheckboxStory = function CheckboxStory() {
  return /*#__PURE__*/React.createElement("fieldset", {
    className: "".concat(prefix, "--fieldset")
  }, /*#__PURE__*/React.createElement("legend", {
    className: "".concat(prefix, "--label")
  }, "Checkbox heading"), /*#__PURE__*/React.createElement(Checkbox, {
    labelText: "Checkbox label",
    id: "checkbox-label-1"
  }), /*#__PURE__*/React.createElement(Checkbox, {
    labelText: "Checkbox label",
    id: "checkbox-label-2"
  }));
};
CheckboxStory.storyName = 'Checkbox';
export var UnstableCheckbox = function UnstableCheckbox() {
  return /*#__PURE__*/React.createElement(FeatureFlags, {
    flags: {
      'enable-v11-release': true
    }
  }, /*#__PURE__*/React.createElement("fieldset", {
    className: "".concat(prefix, "--fieldset")
  }, /*#__PURE__*/React.createElement("legend", {
    className: "".concat(prefix, "--label")
  }, "Checkbox heading"), /*#__PURE__*/React.createElement(Checkbox, _extends({}, props(), {
    labelText: "Checkbox label",
    id: "checkbox-label-1"
  })), /*#__PURE__*/React.createElement(Checkbox, _extends({}, props(), {
    labelText: "Checkbox label",
    id: "checkbox-label-2"
  }))));
};
UnstableCheckbox.story = {
  name: 'unstable_Checkbox'
};
export var Skeleton = function Skeleton() {
  return /*#__PURE__*/React.createElement(CheckboxSkeleton, null);
};

var props = function props() {
  return {
    checked: boolean('Checked (checked)', false),
    className: 'some-class',
    labelText: text('Label text (labelText)', 'Checkbox label'),
    indeterminate: boolean('Intermediate (indeterminate)', false),
    disabled: boolean('Disabled (disabled)', false),
    hideLabel: boolean('No label (hideLabel)', false),
    wrapperClassName: text('Wrapper CSS class name (wrapperClassName)', ''),
    onChange: action('onChange')
  };
};

export var Playground = function Playground() {
  return /*#__PURE__*/React.createElement("fieldset", {
    className: "".concat(prefix, "--fieldset")
  }, /*#__PURE__*/React.createElement("legend", {
    className: classNames("".concat(prefix, "--label"), _defineProperty({}, "".concat(prefix, "--label--disabled"), props().disabled))
  }, "Checkbox heading"), /*#__PURE__*/React.createElement(Checkbox, _extends({}, props(), {
    id: "checkbox-label-1"
  })), /*#__PURE__*/React.createElement(Checkbox, _extends({}, props(), {
    id: "checkbox-label-2"
  })));
};