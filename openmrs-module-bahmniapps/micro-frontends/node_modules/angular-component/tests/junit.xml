<?xml version="1.0"?>
<testsuite name="Chrome 51.0.2704 (Mac OS X 10.11.1)" package="" timestamp="2016-06-02T21:53:31" id="0" hostname="Todds-rMBP.lan" tests="17" errors="0" failures="1" time="0.106">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36"/>
  </properties>
  <testcase name="Component Method should create the module.component method" time="0.003" classname="Component Method"/>
  <testcase name="Component Method should return ddo with reasonable defaults" time="0.019" classname="Component Method"/>
  <testcase name="Component Method should return ddo with assigned options" time="0.007" classname="Component Method"/>
  <testcase name="Component Method should allow passing injectable functions as template/templateUrl" time="0.002" classname="Component Method"/>
  <testcase name="Component Method should allow passing injectable arrays as template/templateUrl" time="0.002" classname="Component Method"/>
  <testcase name="Component Method should allow passing transclude as object" time="0.002" classname="Component Method"/>
  <testcase name="Component Method should give ctrl as syntax priority over controllerAs" time="0.001" classname="Component Method"/>
  <testcase name="$onChanges lifecycle hook should call `$onChanges`, if provided, when a one-way (`&lt;`) or interpolation (`@`) bindings are updated" time="0.023" classname="$onChanges lifecycle hook"/>
  <testcase name="$onChanges lifecycle hook should trigger `$onChanges` even if the inner value already equals the new outer value" time="0.008" classname="$onChanges lifecycle hook"/>
  <testcase name="$onChanges lifecycle hook should trigger an initial onChanges call for each binding with the `isFirstChange()` returning true" time="0.003" classname="$onChanges lifecycle hook"/>
  <testcase name="$onChanges lifecycle hook should trigger an initial onChanges call for each binding even if the hook is defined in the constructor" time="0.003" classname="$onChanges lifecycle hook"/>
  <testcase name="$onChanges lifecycle hook should only trigger one extra digest however many controllers have changes" time="0.008" classname="$onChanges lifecycle hook">
    <failure type="">Expected 2 to equal 3.
    at Object.&lt;anonymous&gt; (/Users/toddmotto/git/angular-component/tests/onChanges.spec.js:333:26)
    at Object.invoke (/Users/toddmotto/git/angular-component/node_modules/angular/angular.js:4152:17)
    at Object.workFn (/Users/toddmotto/git/angular-component/node_modules/angular-mocks/angular-mocks.js:2255:20)
    at window.inject.angular.mock.inject (/Users/toddmotto/git/angular-component/node_modules/angular-mocks/angular-mocks.js:2227:37)
</failure>
  </testcase>
  <testcase name="$onChanges lifecycle hook should cope with changes occuring inside `$onChanges()` hooks" time="0.003" classname="$onChanges lifecycle hook"/>
  <testcase name="$onDestroy lifecycle hook should call `$onDestroy`, if provided, on the controller when its scope is destroyed" time="0.011" classname="$onDestroy lifecycle hook"/>
  <testcase name="$onDestroy lifecycle hook should call `$onDestroy` top-down (the same as `scope.$broadcast`)" time="0.004" classname="$onDestroy lifecycle hook"/>
  <testcase name="$onInit lifecycle hook should call `$onInit`, if provided, after all the controllers on the element have been initialized" time="0.004" classname="$onInit lifecycle hook"/>
  <testcase name="$postLink lifecycle hook should call `$postLink`, if provided, after the element has completed linking (i.e. post-link)" time="0.003" classname="$postLink lifecycle hook"/>
  <system-out>
    <![CDATA[
]]>
  </system-out>
  <system-err/>
</testsuite>